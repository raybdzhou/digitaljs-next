{"version":3,"file":"863.main.js","mappings":"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","sources":["webpack://digitaljs/webpack/universalModuleDefinition","webpack://digitaljs/webpack/runtime/chunk loaded","webpack://digitaljs/webpack/runtime/startup chunk dependencies","webpack://digitaljs/./src/tools.mjs","webpack://digitaljs/./src/cells/base.mjs","webpack://digitaljs/./src/cells/io.mjs","webpack://digitaljs/./src/cells/gates.mjs","webpack://digitaljs/./src/cells/arith.mjs","webpack://digitaljs/./src/cells/bus.mjs","webpack://digitaljs/./src/cells/subcircuit.mjs","webpack://digitaljs/./src/cells/mux.mjs","webpack://digitaljs/./src/cells/dff.mjs","webpack://digitaljs/./src/cells/memory.mjs","webpack://digitaljs/./src/help.mjs","webpack://digitaljs/./src/cells/fsm.mjs","webpack://digitaljs/./src/cells/display7.mjs","webpack://digitaljs/./src/engines/worker-worker.mjs","webpack://digitaljs/webpack/bootstrap","webpack://digitaljs/webpack/runtime/define property getters","webpack://digitaljs/webpack/runtime/ensure chunk","webpack://digitaljs/webpack/runtime/get javascript chunk filename","webpack://digitaljs/webpack/runtime/global","webpack://digitaljs/webpack/runtime/hasOwnProperty shorthand","webpack://digitaljs/webpack/runtime/make namespace object","webpack://digitaljs/webpack/runtime/node module decorator","webpack://digitaljs/webpack/runtime/publicPath","webpack://digitaljs/webpack/runtime/importScripts chunk loading","webpack://digitaljs/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"digitaljs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"digitaljs\"] = factory();\n\telse\n\t\troot[\"digitaljs\"] = factory();\n})(this, function() {\nreturn ","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(357).then(next);\n};","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport _ from 'lodash';\n\nconst circleArrowhead = {\n    tagName: 'circle',\n    attributes: {\n        'r': 7,\n        'fill': 'black',\n        'fill-opacity': 0.3,\n        'stroke': 'black',\n        'stroke-width': 2,\n        'cursor': 'move'\n    }\n};\nexport const CircleSourceArrowhead = joint.linkTools.SourceArrowhead.extend(_.merge({}, circleArrowhead));\nexport const CircleTargetArrowhead = joint.linkTools.TargetArrowhead.extend(_.merge({}, circleArrowhead));\n\nexport const DoublyButton = joint.linkTools.Button.extend({\n    update() {\n        if (this.relatedView.isShortWire()) {\n            this.options.distance = this.options.distanceShort || this.options.distance;\n            if (this.options.secondary) this.hide();\n        } else {\n            this.options.distance = this.options.distanceLong || this.options.distance;\n        }\n        return joint.linkTools.Button.prototype.update.apply(this, arguments);\n    }\n});\nexport const RemoveButton = DoublyButton.extend({\n    name: 'remove',\n    children: joint.linkTools.Remove.prototype.children,\n    options: joint.linkTools.Remove.prototype.options\n});\nexport const MonitorButton = DoublyButton.extend({\n    name: 'monitor',\n    children: [{\n        tagName: 'circle',\n        selector: 'button',\n        attributes: {\n            'r': 7,\n            'fill': '#001DFF',\n            'cursor': 'pointer'\n        }\n    }, {\n        tagName: 'path',\n        selector: 'icon',\n        attributes: {\n            'd': 'm -2.5,-0.5 a 2,2 0 1 0 4,0 2,2 0 1 0 -4,0 M 1,1 3,3',\n            'fill': 'none',\n            'stroke': '#FFFFFF',\n            'stroke-width': 2,\n            'pointer-events': 'none'\n        }\n    }],\n    options: {\n        action(evt) {\n            this.notify('link:monitor');\n        }\n    }\n});\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport _ from 'lodash';\nimport { Vector3vl } from '3vl';\nimport * as tools from '../tools.mjs';\nimport $ from 'jquery';\n\nexport const portGroupAttrs = {\n    wire: {\n        stroke: '#4B4F6A',\n        x1: 0, y1: 0,\n        x2: undefined, y2: 0\n    },\n    port: {\n        magnet: undefined,\n        r: 7,\n        stroke: 'black',\n        fill: 'white',\n        strokeWidth: 2,\n        strokeOpacity: 0.5\n    },\n    bits: {\n        ref: 'port',\n        fill: 'black',\n        fontSize: '7pt'\n    },\n    iolabel: {\n        textVerticalAnchor: 'middle',\n        fill: 'black',\n        fontSize: '8pt'\n    },\n    decor: {\n        stroke: 'black',\n        fill: 'transparent'\n    }\n};\n\n// Common base class for gate models\nexport const Gate = joint.shapes.basic.Generic.define('Gate', {\n    /* default properties */\n    propagation: 1,\n    label: '',\n    \n    size: { width: 80, height: 30 },\n    inputSignals: {},\n    outputSignals: {},\n    attrs: {\n        '.': { magnet: false },\n        body: { stroke: 'black', strokeWidth: 2 },\n        'text': {\n            fontSize: '8pt',\n            fill: 'black'\n        },\n        label: {\n            refX: .5, refDy: 3,\n            textAnchor: 'middle'\n        }\n    },\n    ports: {\n        groups: {\n            'in': {\n                position: 'left',\n                attrs: _.merge({}, portGroupAttrs, {\n                    wire: { x2: -25 },\n                    port: { magnet: 'passive', refX: -25 },\n                    bits: { refDx: 1, refY: -3, textAnchor: 'start' },\n                    iolabel: { refX: 5, textAnchor: 'start' }\n                })\n            },\n            'out': {\n                position: 'right',\n                attrs: _.merge({}, portGroupAttrs, {\n                    wire: { x2: 25 },\n                    port: { magnet: true, refX: 25 },\n                    bits: { refX: -1, refY: -3, textAnchor: 'end' },\n                    iolabel: { refX: -5, textAnchor: 'end' }\n                })\n            }\n        }\n    },\n\n    z: 1\n}, {\n    operation() {\n        return {};\n    },\n    initialize() {\n        // pre-process ports\n        const ports = this.get('ports');\n        if (ports.items) {\n            this._preprocessPorts(ports.items);\n        }\n        \n        joint.shapes.basic.Generic.prototype.initialize.apply(this, arguments);\n        this.prepare();\n        \n        this.bindAttrToProp('label/text', 'label');\n        if (this._unsupportedPropChanges.length > 0) {\n            this.on(this._unsupportedPropChanges.map(prop => 'change:'+prop).join(' '), (__, ___, opt) => {\n                if (opt.init) return;\n                \n                const changed = _.intersection(Object.keys(this.changed), this._unsupportedPropChanges);\n                changed.forEach(attr => {\n                    this.set(attr, this.previous(attr), {init: true});\n                });\n                console.warn('Beta property change support: \"' + changed + '\" changes on ' + this.get('type') + ' are (currently) not supported.');\n            });\n        }\n    },\n    prepare() {\n    },\n    bindAttrToProp(attr, prop) {\n        this.attr(attr, this.get(prop));\n        this.on('change:' + prop, (_, val) => this.attr(attr, val));\n    },\n  \n    /*\n     * Private methods.\n     */\n    _changeOutputSignals(sigs) {\n        _.chain(this.graph.getConnectedLinks(this, {outbound: true}))\n            .groupBy((wire) => wire.get('source').port)\n            .forEach((wires, port) => \n                wires.forEach((wire) => wire.set('signal', sigs[port])))\n            .value();\n    },\n    _setInput(sig, port) {\n        const signals = _.clone(this.get('inputSignals'));\n        signals[port] = sig;\n        this.set('inputSignals', signals);\n    },\n    _clearInput(port) {\n        const bits = this.getPort(port).bits;\n        this._setInput(Vector3vl.xes(bits), port);\n    },\n    _preprocessPorts(ports) {\n        this._resetPortsSignals(ports);\n        for (const port of ports) {\n            port.attrs = {};\n            port.attrs['bits'] = { text: this._getBitsText(port.bits) }\n            if (port.labelled) {\n                const iolabel = { text: 'portlabel' in port ? port.portlabel : port.id };\n                if (port.polarity === false)\n                    iolabel['text-decoration'] = 'overline';\n                if (port.decor) {\n                    console.assert(port.group == 'in');\n                    iolabel['refX'] = 10;\n                }\n                port.attrs['iolabel'] = iolabel;\n            }\n            if (port.decor) {\n                port.attrs['decor'] = { d: port.decor };\n            }\n        }\n    },\n    _setPortsBits(portsBits) {\n        const ports = _.cloneDeep(this.get('ports'));\n        const portsReset = [];\n        for (const portid in portsBits) {\n            const bits = portsBits[portid];\n            const port = ports.items.find(function(port) {\n                return port.id && port.id === portid;\n            });\n            port.bits = bits;\n            port.attrs['bits'].text = this._getBitsText(bits);\n            portsReset.push(port);\n        }\n        this._resetPortsSignals(portsReset);\n        //trigger port changes on model and view\n        this.set('ports', ports);\n        this.graph.getConnectedLinks(this, { outbound: true })\n            .filter((wire) => wire.get('source').port in portsBits)\n            .forEach((wire) => wire._changeSource(wire.get('source')));\n        this.graph.getConnectedLinks(this, { inbound: true })\n            .filter((wire) => wire.get('target').port in portsBits)\n            .forEach((wire) => wire._changeTarget(wire.get('target')));\n    },\n    _getBitsText(bits) {\n        return bits > 1 ? bits : '';\n    },\n    _resetPortValue(port) {\n        return Vector3vl.xes(port.bits);\n    },\n    _resetPortsSignals(ports) {\n        const signals = {\n            in: this.get('inputSignals'),\n            out: this.get('outputSignals')\n        }\n        \n        for (const port of ports) {\n            console.assert(port.bits >= 0);\n            signals[port.dir][port.id] = this._resetPortValue(port);\n        }\n        \n        this.set('inputSignals', signals.in);\n        this.set('outputSignals', signals.out);\n    },\n    _removePortsSignals(ports) {\n        const signals = {\n            in: this.get('inputSignals'),\n            out: this.get('outputSignals')\n        }\n        \n        for (const port of ports) {\n            delete signals[port.dir][port.id];\n        }\n        \n        this.set('inputSignals', signals.in);\n        this.set('outputSignals', signals.out);\n    },\n\n    /*\n     * JointJS port interface with custom hooks to adapt signals.\n     */\n    addPort(port) {\n        this.addPorts([port]);\n    },\n    addPorts(ports) {\n        this._preprocessPorts(ports);\n        joint.shapes.basic.Generic.prototype.addPorts.apply(this, arguments);\n    },\n    removePort(port, opt) {\n        this.removePorts([port]);\n    },\n    removePorts(ports, opt) {\n        this._removePortsSignals(ports);\n        joint.shapes.basic.Generic.prototype.removePorts.apply(this, arguments);\n    },\n\n    /*\n     * Layout methods.\n     */\n    _getStackedPosition(opt) {\n        return function(portsArgs, elBBox) {\n            // ports stacked from top to bottom or left to right\n            const side = opt.side || 'left';\n            const step = opt.step || 16;\n            const offset = opt.offset || 12;\n            const x = side == 'left' ? elBBox.topLeft().x : side == 'right' ? elBBox.topRight().x : undefined;\n            const y = side == 'top' ? elBBox.topLeft().y : side == 'bottom' ? elBBox.bottomRight().y : undefined;\n            if (x !== undefined) {\n                return _.map(portsArgs, function(portArgs, index) {\n                    index += portArgs.idxOffset || 0;\n                    return joint.g.Point({ x: x, y: index*step + offset });\n                });\n            } else {\n                return _.map(portsArgs, function(portArgs, index) {\n                    index += portArgs.idxOffset || 0;\n                    return joint.g.Point({ x: index*step + offset, y: y });\n                });\n            }\n        }\n    },\n    getLayoutSize() {\n        return this.size();\n    },\n    setLayoutPosition(position) {\n        this.set('position', {\n            x: position.x,\n            y: position.y\n        });\n    },\n\n    /*\n     * View Markup.\n     */\n    portMarkup: [{\n        tagName: 'line',\n        className: 'wire',\n        selector: 'wire'\n    }, {\n        tagName: 'circle',\n        className: 'port',\n        selector: 'port'\n    }, {\n        tagName: 'text',\n        className: 'bits',\n        selector: 'bits'\n    }, {\n        tagName: 'text',\n        className: 'iolabel',\n        selector: 'iolabel'\n    }, {\n        tagName: 'path',\n        className: 'decor',\n        selector: 'decor'\n    }],\n    //portLabelMarkup: null, //todo: see https://github.com/clientIO/joint/issues/1278\n    markup: [{\n        tagName: 'text',\n        className: 'label',\n        selector: 'label'\n    }],\n\n    /*\n     * Gate parameters for serialization.\n     */\n    getGateParams(layout) {\n        return _.cloneDeep(_.pick(this.attributes, this._gateParams.concat(layout ? this._gateLayoutParams : [])));\n    },\n    _gateParams: ['label', 'type', 'propagation', 'source_positions'],\n    _gateLayoutParams: ['position'],\n    _unsupportedPropChanges: [],\n    _operationHelpers: [],\n    _presentationParams: []\n});\n\nexport const GateView = joint.dia.ElementView.extend({\n    attrs: {\n        signal: {\n            high: { port: { 'stroke': '#fc7c68' } },\n            low: { port: { 'stroke': '#03c03c' } },\n            def: { port: { 'stroke': '#779ecb' } },\n            undef: { port: { 'stroke': '#999' } }\n        }\n    },\n    presentationAttributes: joint.dia.ElementView.addPresentationAttributes({\n        inputSignals: 'SIGNAL',\n        outputSignals: 'SIGNAL2'\n    }),\n    stopprop(evt) {\n        evt.stopPropagation();\n    },\n    confirmUpdate(flags) {\n        if (this.hasFlag(flags, 'SIGNAL')) {\n            this._updatePortSignals('in');\n        }\n        if (this.hasFlag(flags, 'SIGNAL2')) {\n            this._updatePortSignals('out');\n        }\n        joint.dia.ElementView.prototype.confirmUpdate.apply(this, arguments);\n    },\n    _updatePortSignals(dir) {\n        const signals =\n            dir === 'in' ? this.model.get('inputSignals') :\n            dir === 'out' ? this.model.get('outputSignals') :\n            _.merge({}, this.model.get('inputSignals'), this.model.get('outputSignals'));\n        for (const port in signals) {\n            const signal = signals[port];\n            const attrs = this.attrs.signal[\n                !signal.isDefined ? 'undef' :\n                signal.isHigh ? 'high' :\n                signal.isLow ? 'low' : 'def'\n            ];\n            this._applyPortAttrs(port, attrs);\n        }\n    },\n    _applyAttrs(attrs) {\n        for (const selector in attrs) {\n            const node = this.selectors[selector];\n            this.setNodeAttributes(node, attrs[selector]);\n        }\n    },\n    _applyPortAttrs(port, attrs) {\n        if (port in this._portElementsCache) {\n            for (const selector in attrs) {\n                const node = this._portElementsCache[port].portSelectors[selector];\n                this.setNodeAttributes(node, attrs[selector]);\n            }\n        }\n    },\n    // overrides joint.dia.ElementView.prototype._updatePorts to reflect port signals\n    _updatePorts() {\n        joint.dia.ElementView.prototype._updatePorts.apply(this, arguments);\n        this._updatePortSignals();\n    }\n});\n\n// Connecting wire model\nexport const Wire = joint.shapes.standard.Link.define('Wire', {\n    attrs: {\n        line: {\n            class: 'connection',\n            targetMarker: null\n        },\n        wrapper: {\n            stroke: 'red'\n        }\n    },\n\n    signal: Vector3vl.xes(1),\n    bits: 1,\n    warning: false,\n\n    // show behind gates\n    z: 0\n}, {\n    initialize() {\n        joint.shapes.standard.Link.prototype.initialize.apply(this, arguments);\n        if (this.has('netname')) {\n            this.label(0, {\n                markup: [\n                    {\n                        tagName: 'text',\n                        selector: 'label'\n                    }\n                ],\n                attrs: {\n                    label: {\n                        text: this.get('netname'),\n                        fill: 'black',\n                        fontSize: '8pt'\n                    }\n                },\n                position: {\n                    distance: 0.5\n                }\n            });\n        }\n    },\n    onAdd() {\n        this._changeSource(this.get('source'));\n        this._was_added = true; // hacky fix for warnings calculation\n    },\n    remove() {\n        const tar = this.get('target');\n        const target = this.graph.getCell(tar.id);\n        if (target && 'port' in tar) {\n            target._clearInput(tar.port);\n        }\n        joint.shapes.standard.Link.prototype.remove.apply(this, arguments);\n    },\n\n    /*\n     * Private methods.\n     */\n    _propagateSignal(tar, sig) {\n        const target = this.getTargetElement();\n        if (target) {\n            if (this.get('warning'))\n                target._clearInput(tar.port);\n            else\n                target._setInput(sig, tar.port);\n        }\n    },\n    _changeSignal(sig) {\n        this._propagateSignal(this.get('target'), sig);\n    },\n    _changeSource(src) {\n        const source = this.getSourceElement();\n        if (source && 'port' in src) {\n            this.set('bits', source.getPort(src.port).bits);\n            this._checkConnection();\n            //set signal after checking connection to avoid false signal propagation\n            this.set('signal', source.get('outputSignals')[src.port]);\n        } else {\n            this.set('signal', Vector3vl.xes(this.get('bits')));\n        }\n    },\n    _changeTarget(tar) {\n        this._checkConnection();\n        if ('port' in tar) {\n            this._propagateSignal(tar, this.get('signal'));\n        }\n        if (!this.hasChanged('target')) return;\n        const preTar = this.previous('target');\n        const preTarget = this.graph.getCell(preTar.id);\n        if (preTarget && 'port' in preTar) {\n            preTarget._clearInput(preTar.port);\n        }\n    },\n    _checkConnection() {\n        const tar = this.get('target');\n        const target = this.graph.getCell(tar.id);\n        this.set('warning', (target && target.getPort(tar.port).bits !== this.get('bits')) || false, {silent: !this._was_added});\n    },\n\n    /*\n     * Wire parameters for serialization.\n     */\n    getWireParams(layout) {\n        const connector = {\n            from: {\n                id: this.get('source').id,\n                port: this.get('source').port\n            },\n            to: {\n                id: this.get('target').id,\n                port: this.get('target').port\n            }\n        };\n        if (this.has('netname'))\n            connector.name = this.get('netname');\n        if (layout && this.has('vertices') && this.get('vertices').length > 0)\n            connector.vertices = _.cloneDeep(this.get('vertices'));\n        return connector;\n    },\n    getWirePath() {\n        const hier = [];\n        for (let sc = this.graph.get('subcircuit'); sc != null; sc = sc.graph.get('subcircuit')) {\n            if (!sc.has('label')) return null;\n            hier.push(sc.get('label'));\n        }\n        return hier.reverse();\n    }\n});\n\nexport const WireView = joint.dia.LinkView.extend({\n    initFlag: joint.dia.LinkView.prototype.initFlag.concat(['INIT']),\n    longWireLength: 400,\n    attrs: {\n        signal: {\n            high: { line: { 'stroke': '#fc7c68' } },\n            low: { line: { 'stroke': '#03c03c' } },\n            def: { line: { 'stroke': '#779ecb' } },\n            undef: { line: { 'stroke': '#999' } }\n        },\n        bits: {\n            bus: { line: { 'stroke-width': '4px' } },\n            single: { line: { 'stroke-width': '2px' } }\n        },\n        warning: {\n            warn: { wrapper: { 'stroke-opacity': '0.5' } },\n            none: { wrapper: { 'stroke-opacity': '0' } }\n        }\n    },\n    // only instantiate toolsView in browser-environment\n    _wireToolsView: (typeof window !== 'undefined') ? new joint.dia.ToolsView({\n        tools: [\n            new joint.linkTools.Vertices({ focusOpacity: 0.5 }),\n            //new joint.linkTools.Segments({ focusOpacity: 0.5 }), //todo: problem with signal reset ??,\n            new tools.CircleSourceArrowhead(),\n            new tools.CircleTargetArrowhead(),\n            new tools.RemoveButton({ distanceShort: '75%', distanceLong: '50' }),\n            new tools.RemoveButton({ distance: '-50', secondary: true }),\n            new tools.MonitorButton({ distanceShort: '25%', distanceLong: '30' }),\n            new tools.MonitorButton({ distance: '-30', secondary: true })\n        ]\n    }) : null,\n    presentationAttributes: joint.dia.LinkView.addPresentationAttributes({\n        signal: 'SIGNAL',\n        bits: 'BITS',\n        warning: 'WARNING'\n    }),\n    initialize() {\n        joint.dia.LinkView.prototype.initialize.apply(this, arguments);\n        this.prevModels = { source: null, target: null };\n    },\n    confirmUpdate(flags) {\n        joint.dia.LinkView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'SIGNAL')) {\n            this._updateSignal();\n        }\n        if (this.hasFlag(flags, 'BITS')) {\n            this._updateBits();\n        }\n        if (this.hasFlag(flags, 'WARNING')) {\n            this._updateWarning();\n        }\n    },\n\n    isShortWire() {\n        return this.getConnectionLength() < this.longWireLength;\n    },\n    _updateSignal() {\n        const signal = this.model.get('signal');\n        const attrs = this.attrs.signal[\n            !signal.isDefined ? 'undef' :\n            signal.isHigh ? 'high' :\n            signal.isLow ? 'low' : 'def'\n        ];\n        this._applyAttrs(attrs);\n    },\n    _updateBits() {\n        const bits = this.model.get('bits');\n        const attrs = this.attrs.bits[\n            bits > 1 ? 'bus' : 'single'\n        ];\n        this._applyAttrs(attrs);\n    },\n    _updateWarning() {\n        const warning = this.model.get('warning');\n        const attrs = this.attrs.warning[\n            warning ? 'warn' : 'none'\n        ];\n        this._applyAttrs(attrs);\n    },\n    _applyAttrs(attrs) {\n        for (const selector in attrs) {\n            const node = this.selectors[selector];\n            this.setNodeAttributes(node, attrs[selector]);\n        }\n    },\n\n    update() {\n        joint.dia.LinkView.prototype.update.apply(this, arguments);\n        this._updateSignal();\n        this._updateBits();\n        this._updateWarning();\n    },\n    onRemove() {\n        joint.dia.LinkView.prototype.onRemove.apply(this, arguments);\n        this._removeTooltip();\n    },\n\n    mouseenter(evt) {\n        joint.dia.LinkView.prototype.mouseenter.apply(this, arguments);\n        this.addTools(this._wireToolsView);\n        this._addTooltip({x: evt.clientX + 5, y: evt.clientY + 5 });\n    },\n    mouseleave(evt) {\n        joint.dia.LinkView.prototype.mouseleave.apply(this, arguments);\n        this.removeTools();\n        this._removeTooltip();\n    },\n\n    /*\n     * Display current value on wire in tooltip.\n     */\n    _addTooltip(pos) {\n        if (this.model.get('bits') == 1) return;\n        if (this.wire_hover) return;\n        this.wire_hover = $('<div class=\"wire_hover\">')\n            .css('left', pos.x)\n            .css('top', pos.y)\n            .appendTo($(document.body));\n        this._generateTextForTooltip();\n        this.listenTo(this.model, 'change:signal', this._generateTextForTooltip);\n    },\n    _removeTooltip() {\n        if (this.wire_hover) {\n            this.wire_hover.remove();\n            this.wire_hover = null;\n            this.stopListening(this.model, 'change:signal', this._generateTextForTooltip);\n        }\n    },\n    _generateTextForTooltip() {\n        if (!this.wire_hover) return;\n        const sig = this.model.get('signal');\n        const display3vl = this.model.graph._display3vl;\n        const hovertext = [\n            'Hex: ' + display3vl.show('hex', sig) + '<br>',\n            'Dec: ' + display3vl.show('dec', sig) + '<br>',\n            'Oct: ' + display3vl.show('oct', sig) + '<br>',\n            'Bin: ' + display3vl.show('bin', sig)\n        ].join('');\n        this.wire_hover.html(hovertext);\n    },\n\n    // Quick-and-dirty performance fix\n    onEndModelChange(endType, endModel, opt) {\n        if (typeof endModel == 'object' && endModel != null &&\n            endModel == this.prevModels[endType] &&\n            Object.keys(endModel.changed).length > 0 &&\n            !('position' in endModel.changed)) return;\n        joint.dia.LinkView.prototype.onEndModelChange.apply(this, arguments);\n        this.prevModels[endType] = endModel;\n    }\n});\n\n// base class for gates displayed as a box\nexport const Box = Gate.define('Box', {\n    attrs: {\n        body: { refWidth: 1, refHeight: 1 },\n        tooltip: { refX: 0, refY: -30, height: 30 }\n    }\n}, {\n    initialize() {\n        Gate.prototype.initialize.apply(this, arguments);\n        this.on('change:size', (_, size) => {\n            if (size.width > this.tooltipMinWidth) {\n                this.attr('tooltip', { refWidth: 1, width: null });\n            } else {\n                this.attr('tooltip', { refWidth: null, width: this.tooltipMinWidth });\n            }\n        });\n        this.trigger('change:size', this, this.prop('size'));\n    },\n    markup: Gate.prototype.markup.concat([{\n            tagName: 'rect',\n            className: 'body',\n            selector: 'body'\n        }\n    ]),\n    markupZoom: [{\n        tagName: 'foreignObject',\n        className: 'tooltip',\n        selector: 'tooltip',\n        children: [{\n            tagName: 'body',\n            namespaceURI: 'http://www.w3.org/1999/xhtml',\n            children: [{\n                tagName: 'a',\n                className: 'zoom',\n                textContent: '🔍',\n                style: { cursor: 'pointer' }\n            }]\n        }]\n    }],\n    tooltipMinWidth: 20,\n    decorClock: 'M' + [\n                    [0, -6],\n                    [6, 0],\n                    [0, 6]\n                ].map(l => l.join(' ')).join(' L')\n});\n\nexport const BoxView = GateView.extend({\n    _autoResizeBox: false,\n    render() {\n        //todo: resize Box after port label / IO name / mode / bit size change\n        GateView.prototype.render.apply(this, arguments);\n        if (this._autoResizeBox && !this.model.get('box_resized')) {\n            this.model.set('box_resized', true);\n            this.model.prop('size/width', this._calculateBoxWidth());\n        }\n    },\n    _calculateBoxWidth() {\n        const leftlabels = Array.from(this.el.querySelectorAll('[port-group=in] > text.iolabel'));\n        const rightlabels = Array.from(this.el.querySelectorAll('[port-group=out] > text.iolabel'));\n        const leftwidth = Math.max(...leftlabels.map(x => x.getBBox().width));\n        const rightwidth = Math.max(...rightlabels.map(x => x.getBBox().width));\n        const fixup = x => x == -Infinity ? -5 : x;\n        const width = fixup(leftwidth) + fixup(rightwidth) + 25;\n        return width;\n    }\n});\n\n","\"use strict\";\n\nimport { Box, BoxView } from './base.mjs';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport { Vector3vl } from '3vl';\n\n// Things with numbers\nexport const NumBase = Box.define('NumBase', {\n    /* default properties */\n    numbase: 'hex',\n    bits: 1\n}, {\n    initialize() {\n        Box.prototype.initialize.apply(this, arguments);\n\n        this.on('change:bits', (_, bits) => {\n            const display3vl = this.graph._display3vl;\n            const displays = display3vl.usableDisplays(this.numbaseType, this.get('bits'));\n            if (!displays.includes(this.get('numbase')))\n                this.set('numbase', 'hex');\n        });\n    },\n    tooltipMinWidth: 70,\n    markupTooltip: [{\n        tagName: 'foreignObject',\n        className: 'tooltip',\n        selector: 'tooltip',\n        children: [{\n            tagName: 'body',\n            namespaceURI: 'http://www.w3.org/1999/xhtml',\n            children: [{\n                tagName: 'select',\n                className: 'numbase'\n            }]\n        }]\n    }],\n    _gateParams: Box.prototype._gateParams.concat(['numbase'])\n});\nexport const NumBaseView = BoxView.extend({\n    presentationAttributes: BoxView.addPresentationAttributes({\n        bits: 'BITS',\n        numbase: 'NUMBASE'\n    }),\n    _autoResizeBox: true,\n    events: {\n        \"click select.numbase\": \"stopprop\",\n        \"mousedown select.numbase\": \"stopprop\", // Prevent drag\n        \"touchstart select.numbase\": \"stopprop\", // Prevent drag & make sure select works\n        \"change select.numbase\": \"_changeNumbase\"\n    },\n    _changeNumbase(evt) {\n        this.model.set('numbase', evt.target.value || 'bin');\n    },\n    _calculateBoxWidth() {\n        const testtext = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        $(testtext).text(Array(this.model.get('bits')).fill('0').join(''))\n            .attr('class', 'numvalue')\n            .appendTo(this.$el);\n        const width = testtext.getBBox().width + 20;\n        testtext.remove();\n        return width;\n    },\n    confirmUpdate(flags) {\n        BoxView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'BITS') || this.hasFlag(flags, 'RENDER'))\n            this._makeNumBaseSelector();\n        if (this.hasFlag(flags, 'NUMBASE'))\n            this._updateNumBaseSelector();\n    },\n    _makeNumBaseSelector() {\n        this.$('select.numbase').empty();\n        const numbase = this.model.get('numbase');\n        const display3vl = this.model.graph._display3vl;\n        for (const base of display3vl.usableDisplays(this.model.numbaseType, this.model.get('bits'))) {\n            const opt = $('<option>')\n                .attr('value', base)\n                .prop('selected', base == numbase)\n                .text(base)\n                .appendTo(this.$('select.numbase'));\n        }\n    },\n    _updateNumBaseSelector() {\n        this.$('select.numbase').val(this.model.get('numbase'));\n    }\n});\n\n// Input/output model\nexport const IO = NumBase.define('IO', {\n    /* default properties */\n    bits: 1,\n    net: '',\n    //as I/O has no delay, this is even not taken into account at all\n    propagation: 0,\n    /* 0 - within subcircuit, 1 - single-line, 2 - bus-line */\n    mode: -1,\n\n    attrs: {\n        ioname: {\n            refX: .5, refY: .5,\n            textAnchor: 'middle', textVerticalAnchor: 'middle',\n            fontWeight: 'bold',\n            fontSize: '10pt'\n        }\n    }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: this._portDirection, group: this._portDirection, dir: this._portDirection, bits: bits }\n        ];\n\n        NumBase.prototype.initialize.apply(this, arguments);\n\n        this.on('change:bits', (_, bits) => {\n            const b = {};\n            b[this._portDirection] = bits;\n            this._setPortsBits(b);\n            if (this.get('mode') != 0) this._checkMode();\n        });\n        this.bindAttrToProp('text.ioname/text', 'net');\n    },\n    onAdd() {\n        this._checkMode();\n    },\n    _checkMode() {\n        // assumes graph to have subcircuit property before adding elements\n        const withinSubcircuit = this.graph && this.graph.has('subcircuit');\n        const bits = this.get('bits');\n        const mode = withinSubcircuit ? 0 : bits == 1 ? 1 : 2;\n\n        this.set('mode', mode);\n        this.set('box_resized', false);\n        this.set('markup', mode == 0 ? this.markupInSubcircuit :\n            mode == 1 ? this.markupSingle : this.markupBus\n        );\n        return mode;\n    },\n    _setPortsBits(portsBits) {\n        NumBase.prototype._setPortsBits.apply(this, arguments);\n\n        if (this.get('mode') != 0) return; // not inside a subcircuit\n        const subcir = this.graph.get('subcircuit');\n        console.assert(subcir != null);\n        const portsBitsSubcir = {};\n        portsBitsSubcir[this.get('net')] = portsBits[this._portDirection];\n        subcir._setPortsBits(portsBitsSubcir);\n    },\n    markupSingle: NumBase.prototype.markup,\n    markupBus: NumBase.prototype.markup.concat(NumBase.prototype.markupTooltip),\n    markupInSubcircuit: NumBase.prototype.markup.concat([{\n            tagName: 'text',\n            className: 'ioname',\n            selector: 'ioname'\n        }\n    ]),\n    _gateParams: NumBase.prototype._gateParams.concat(['bits','net','order'])\n});\nexport const IOView = NumBaseView.extend({\n    _calculateBoxWidth() {\n        switch (this.model.get('mode')) {\n            case 0:\n                // resize based on io name\n                const text = this.selectors['ioname'];\n                if (text.getAttribute('display') !== 'none') return text.getBBox().width + 10;\n                return 20;\n            case 1:\n                // resize to width = 30 (assumes height == 30 too)\n                return 30;\n            case 2:\n                // resize based on binary string\n                return NumBaseView.prototype._calculateBoxWidth.call(this);\n        }\n    }\n});\n\n// Input model\nexport const Input = IO.define('Input', {\n    attrs: {\n        btnface: {\n            stroke: 'black', strokeWidth: 2,\n            refX: .2, refY: .2,\n            refHeight: .6, refWidth: .6,\n            cursor: 'pointer'\n        },\n        'foreignObject.valinput': {\n            refX: .5, refY: .5,\n            refWidth: -10, refHeight: -10,\n            xAlignment: 'middle', yAlignment: 'middle',\n        }\n    }\n}, {\n    isInput: true,\n    _portDirection: 'out',\n    _resetPortValue(port) {\n        if (port.id == \"out\" && port.dir == \"out\") {\n            const bits = this.get('bits');\n            const mode = this.get('mode');\n            return mode == 1 ? Vector3vl.zeros(bits) : Vector3vl.xes(bits);\n        } else return IO.prototype._resetPortValue.call(this, port);\n    },\n    _checkMode() {\n        IO.prototype._checkMode.call(this);\n        this._resetPortsSignals([this.get('ports').items[0]]);\n    },\n    setInput(sig) {\n        this._setInput(sig);\n        this.trigger('userChange', this);\n    },\n    toggleInput() {\n        this.setInput(this.get('outputSignals').out.not());\n    },\n    _setInput(sig) {\n        if (sig.bits != this.get('bits'))\n            throw new Error(\"setInput: wrong number of bits\");\n        this.set('outputSignals', { out: sig });\n    },\n    markupSingle: IO.prototype.markupSingle.concat([{\n            tagName: 'rect',\n            className: 'btnface',\n            selector: 'btnface'\n        }\n    ]),\n    markupBus: IO.prototype.markupBus.concat([{\n            tagName: 'foreignObject',\n            className: 'valinput',\n            children: [{\n                tagName: 'body',\n                namespaceURI: 'http://www.w3.org/1999/xhtml',\n                children: [{\n                    tagName: 'input',\n                    attributes: { type: 'text' }\n                }]\n            }]\n        }\n    ]),\n    numbaseType: 'read'\n});\nexport const InputView = IOView.extend({\n    attrs: _.merge({\n        button: {\n            high: { btnface: { 'fill': 'black' } },\n            low: { btnface: { 'fill': 'white' } }\n        }\n    }, IOView.prototype.attrs),\n    confirmUpdate(flags) {\n        IOView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'SIGNAL2') ||\n            this.hasFlag(flags, 'NUMBASE')) this._updateView();\n    },\n    _updateView() {\n        switch (this.model.get('mode')) {\n            case 1: this._updateButton(); break;\n            case 2: this._updateNumEntry(); break;\n        }\n    },\n    _updateButton() {\n        const signal = this.model.get('outputSignals').out;\n        const attrs = this.attrs.button[\n            signal.isHigh ? 'high' : 'low'\n        ];\n        this._applyAttrs(attrs);\n    },\n    _updateNumEntry() {\n        const display3vl = this.model.graph._display3vl;\n        this.$('input').val(display3vl.show(this.model.get('numbase'), this.model.get('outputSignals').out));\n        this.$('input').removeClass('invalid');\n    },\n    render() {\n        IOView.prototype.render.apply(this, arguments);\n        this._updateView();\n    },\n    events: _.merge({\n        //button\n        \"click .btnface\": \"_onButton\",\n        \"mousedown .btnface\": \"stopprop\", // Prevent drag\n        \"touchstart .btnface\": \"stopprop\", // Prevent drag & make sure click is generated\n        //numEntry\n        \"click input\": \"stopprop\",\n        \"mousedown input\": \"stopprop\", // Prevent drag\n        \"touchstart input\": \"stopprop\", // Prevent drag & make sure the input receives focus\n        \"change input\": \"_onNumEntry\"\n    }, NumBaseView.prototype.events),\n    _onButton() {\n        this.model.toggleInput();\n    },\n    _onNumEntry(evt) {\n        const numbase = this.model.get('numbase');\n        const bits = this.model.get('bits');\n        const display3vl = this.model.graph._display3vl;\n        if (display3vl.validate(numbase, evt.target.value, bits)) {\n            const val = display3vl.read(numbase, evt.target.value, bits);\n            this.model.setInput(val);\n        } else {\n            this.$('input').addClass('invalid');\n        }\n    }\n});\n\n// legacy special input models, now replaced by Input\nexport const Button = Input;\nexport const ButtonView = InputView;\nexport const NumEntry = Input;\nexport const NumEntryView = InputView;\n\n// Output model\nexport const Output = IO.define('Output', {\n    attrs: {\n        led: {\n            refX: .5, refY: .5, refR: .35\n        },\n        value: {\n            refX: .5, refY: .5,\n            textVerticalAnchor: 'middle',\n            text: '0'\n        }\n    }\n}, {\n    isOutput: true,\n    _portDirection: 'in',\n    getOutput() {\n        return this.get('inputSignals').in;\n    },\n    markupSingle: IO.prototype.markupSingle.concat([{\n            tagName: 'circle',\n            className: 'led',\n            selector: 'led'\n        }\n    ]),\n    markupBus: IO.prototype.markupBus.concat([{\n            tagName: 'text',\n            className: 'value numvalue',\n            selector: 'value'\n        }\n    ]),\n    numbaseType: 'show'\n});\nexport const OutputView = IOView.extend({\n    attrs: _.merge({\n        lamp: {\n            high: { led: { 'fill': '#fc7c68' } },\n            low: { led: { 'fill': '#03c03c' } },\n            undef: { led: { 'fill': '#bfc5c6' } }\n        }\n    }, IOView.prototype.attrs),\n    confirmUpdate(flags) {\n        IOView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'SIGNAL') ||\n            this.hasFlag(flags, 'NUMBASE')) this._updateView();\n    },\n    _updateView() {\n        switch (this.model.get('mode')) {\n            case 1: this._updateLamp(); break;\n            case 2: this._updateNumDisplay(); break;\n        }\n    },\n    _updateLamp() {\n        const signal = this.model.get('inputSignals').in;\n        const attrs = this.attrs.lamp[\n            signal.isHigh ? 'high' :\n            signal.isLow ? 'low' : 'undef'\n        ];\n        this._applyAttrs(attrs);\n    },\n    _updateNumDisplay() {\n        const display3vl = this.model.graph._display3vl;\n        this.$('text.value tspan').text(display3vl.show(this.model.get('numbase'), this.model.get('inputSignals').in));\n    },\n    render() {\n        IOView.prototype.render.apply(this, arguments);\n        this._updateView();\n    }\n});\n\n// legacy special output models, now replaced by Output\nexport const Lamp = Output;\nexport const LampView = OutputView;\n\nexport const NumDisplay = Output;\nexport const NumDisplayView = OutputView;\n\n// Constant\nexport const Constant = NumBase.define('Constant', {\n    /* default properties */\n    constant: '0',\n    propagation: 0,\n\n    attrs: {\n        value: {\n            refX: .5, refY: .5,\n            textVerticalAnchor: 'middle',\n            text: '0'\n        }\n    }\n}, {\n    initialize() {\n        const constant = this.get('constant');\n        const bits = constant.length;\n        this.set('bits', bits);\n        this.get('ports').items = [\n            { id: 'out', group: 'out', dir: 'out', bits: bits }\n        ];\n        \n        NumBase.prototype.initialize.apply(this, arguments);\n       \n        this.on('change:constant', (_, constant) => {\n            const bits = constant.length;\n            this._setPortsBits({ out: bits });\n            this.set('bits', bits);\n            this.set('constantCache', Vector3vl.fromBin(constant, bits));\n        });\n    },\n    prepare() {\n        const constant = this.get('constant');\n        const bits = constant.length;\n        this.set('constantCache', Vector3vl.fromBin(constant, bits));\n    },\n    operation() {\n        return { out: this.get('constantCache') };\n    },\n    markup: NumBase.prototype.markup.concat([{\n            tagName: 'text',\n            className: 'value numvalue',\n            selector: 'value'\n        }\n    ]),\n    _gateParams: NumBase.prototype._gateParams.concat(['constant']),\n    numbaseType: 'show'\n});\nexport const ConstantView = NumBaseView.extend({\n    presentationAttributes: NumBaseView.addPresentationAttributes({\n        constantCache: 'CONSTANT'\n    }),\n    confirmUpdate(flags) {\n        NumBaseView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'CONSTANT') ||\n            this.hasFlag(flags, 'NUMBASE')) this._showText();\n    },\n    _showText() {\n        const display3vl = this.model.graph._display3vl;\n        this.$('text.value tspan').text(display3vl.show(this.model.get('numbase'), this.model.get('constantCache')));\n    },\n    update() {\n        NumBaseView.prototype.update.apply(this, arguments);\n        this._showText();\n    }\n});\n\n// Clock\nexport const Clock = Box.define('Clock', {\n    /* default properties */\n    propagation: 100,\n\n    ports: {\n        items: [\n            { id: 'out', group: 'out', dir: 'out', bits: 1 }\n        ]\n    },\n\n    size: { width: 30, height: 30 }\n}, {\n    _resetPortValue(port) {\n        if (port.id == \"out\" && port.dir == \"out\") {\n            return Vector3vl.zero;\n        } else return Box.prototype._resetPortValue(port);\n    },\n    operation() {\n        // trigger next clock edge\n        return { out: this.get('outputSignals').out.not(), _clock_hack: true };\n    },\n    tooltipMinWidth: 55,\n    markup: Box.prototype.markup.concat([{\n            tagName: 'path',\n            className: 'decor',\n            attributes: { d: 'M7.5 7.5 L7.5 22.5 L15 22.5 L15 7.5 L22.5 7.5 L22.5 22.5', stroke: 'black' }\n        }, {\n            tagName: 'foreignObject',\n            className: 'tooltip',\n            selector: 'tooltip',\n            children: [{\n                tagName: 'body',\n                namespaceURI: 'http://www.w3.org/1999/xhtml',\n                children: [{\n                    tagName: 'input',\n                    attributes: { type: 'number', min: 1, step: 1 }\n                }]\n            }]\n        }\n    ]),\n    _unsupportedPropChanges: Box.prototype._unsupportedPropChanges.concat(['bits'])\n});\nexport const ClockView = BoxView.extend({\n    presentationAttributes: BoxView.addPresentationAttributes({\n        propagation: 'SIGNAL'\n    }),\n    events: {\n        \"click input\": \"stopprop\",\n        \"mousedown input\": \"stopprop\",\n        \"touchstart input\": \"stopprop\", // make sure the input receives focus\n        \"change input\": \"_changePropagation\",\n        \"input input\": \"_changePropagation\"\n    },\n    render(args) {\n        BoxView.prototype.render.apply(this, arguments);\n        this.updatePropagation();\n    },\n    confirmUpdate(flags) {\n        BoxView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'SIGNAL')) this.updatePropagation();\n    },\n    _changePropagation(evt) {\n        const val = evt.target.value;\n        const valid = String(val) == String(Number(val));\n        if (valid) this.model.set('propagation', Number(val) || 1);\n        this.$('input').toggleClass('invalid', !valid);\n    },\n    updatePropagation() {\n        this.$('input').val(this.model.get('propagation'));\n    }\n});\n\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport { Gate, GateView } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl } from '3vl';\n\nconst and_path = \"M19 0v32h16c9 0 16-7 16-16S44 0 35 0H20z\";\nconst or_path = \"M14.3 0l1.6 2s4.5 5.6 4.5 14s-4.5 14-4.5 14l-1.6 2H28c3.8 0 16.6-.5 25-16h0A28 28 0 0028 0H16.8z\";\nconst buf_path = \"M18-2v36l2-1 32-17h0L20-1z\";\nconst xor_arc_path = \"M6.8-1.2 10 2.7S14.2 8 14.2 16S10 29.3 10 29.3l-3.2 3.9H10l1.7-2.4s4.8-6 4.8-14.8c0-8.9-4.8-14.8-4.8-14.8l-1.7-2.4z\";\n    \nconst xor_arc_path_markup = {\n    tagName: 'path',\n    selector: 'xor_arc',\n    attributes: {\n        'fill': \"#000\",\n        'd': xor_arc_path\n    }\n};\n\nconst neg_markup = {\n    tagName: 'circle',\n    className: 'body',\n    selector: 'neg_bubble',\n    attributes: {\n        'stroke': \"#000\",\n        'stroke-width': '2px',\n        'cx': 56,\n        'cy': 16,\n        'r': 4\n    }\n};\n\nfunction gateMarkup(children = []) {\n    return {\n        tagName: 'g',\n        selector: 'body',\n        children: [\n            {\n                tagName: 'path',\n                className: 'body gate',\n                selector: 'gate'\n            }\n        ].concat(children)\n    }\n}\n\n// base class for gates\nexport const GateSVG = Gate.define('GateSVG', {\n    /* default properties */\n    bits: 1,\n\n    size: { width: 60, height: 32 },\n    ports: {\n        groups: {\n            'in': { position: { name: 'left', args: { dx: 30 } }, attrs: { wire: { x2: -50 }, port: { refX: -50 } }, z: -1 },\n            'out': { position: { name: 'right', args: { dx: -30 } }, attrs: { wire: { x2: 50 }, port: { refX: 50 } }, z: -1 }\n        }\n    }\n}, {\n    markup: Gate.prototype.markup.concat([gateMarkup()]),\n    _gateParams: Gate.prototype._gateParams.concat(['bits'])\n});\n\n// Single-input gate model\nexport const Gate11 = GateSVG.define('Gate11', {}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits },\n            { id: 'out', group: 'out', dir: 'out', bits: bits }\n        ];\n        \n        GateSVG.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_, bits) => {\n            this._setPortsBits({ in: bits, out: bits });\n        });\n    }\n});\n\n// Multi-input gate model\nexport const GateX1 = GateSVG.define('GateX1', {\n    /* default properties */\n    inputs: 2,\n\n    attrs: {\n        gate: {\n            'vector-effect': 'non-scaling-stroke'\n        },\n        xor_arc: {\n            'vector-effect': 'non-scaling-stroke'\n        },\n        neg_bubble: {\n            'vector-effect': 'non-scaling-stroke'\n        }\n    }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        const inputs = this.get('inputs');\n\n        const ports = [];\n        for (let i = 1; i <= inputs; i++)\n            ports.push({ id: 'in' + i, group: 'in', dir: 'in', bits: bits });\n        ports.push({ id: 'out', group: 'out', dir: 'out', bits: bits });\n        this.get('ports').items = ports;\n        const scaling = inputs / 2;\n        this.set('size', { width: 60 * scaling, height: 32 * scaling });\n        this.attr('body/transform', 'translate(-4, 0) scale('+scaling+')');\n\n        this.prop('ports/groups/in/position/args/dx', 30 * scaling);\n        this.prop('ports/groups/in/attrs/wire/x2', -30 * scaling - 20);\n        this.prop('ports/groups/in/attrs/port/refX', -30 * scaling - 20);\n        this.prop('ports/groups/out/position/args/dx', -30 * scaling);\n        this.prop('ports/groups/out/attrs/wire/x2', 30 * scaling + 20);\n        this.prop('ports/groups/out/attrs/port/refX', 30 * scaling + 20);\n\n        GateSVG.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_, bits) => {\n            const inputs = this.get('inputs');\n            const param = { out: bits };\n            for (let i = 1; i <= inputs; i++)\n                param['in' + i] = bits;\n            this._setPortsBits(param);\n        });\n    },\n    operation(data) {\n        let ret = data.in1;\n        for (let i = 2; i <= this.get('inputs'); i++)\n            ret = this.binoperation(ret, data['in' + i]);\n        return { out: this.finoperation(ret) };\n    },\n    finoperation(val) {\n        return val\n    },\n    _gateParams: GateSVG.prototype._gateParams.concat(['inputs']),\n    _unsupportedPropChanges: GateSVG.prototype._unsupportedPropChanges.concat(['inputs']),\n    _operationHelpers: GateSVG.prototype._operationHelpers.concat(['binoperation', 'finoperation'])\n});\n\n// Reducing gate model\nexport const GateReduce = GateSVG.define('GateReduce', {}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits },\n            { id: 'out', group: 'out', dir: 'out', bits: 1 }\n        ];\n        \n        GateSVG.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_, bits) => {\n            this._setPortsBits({ in: bits });\n        });\n    }\n});\n\n// Repeater (buffer) gate model\nexport const Repeater = Gate11.define('Repeater', {\n    attrs: { gate: { d: buf_path }}\n}, {\n    operation(data) {\n        return { out: data.in };\n    }\n});\nexport const RepeaterView = GateView;\n\n// Not gate model\nexport const Not = Gate11.define('Not', {\n    attrs: { gate: { d: buf_path }}\n}, {\n    operation(data) {\n        return { out: data.in.not() };\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([neg_markup])]),\n});\nexport const NotView = GateView;\n\n// Or gate model\nexport const Or = GateX1.define('Or', {\n    attrs: { gate: { d: or_path }}\n}, {\n    binoperation(in1, in2) {\n        return in1.or(in2);\n    }\n});\nexport const OrView = GateView;\n\n// And gate model\nexport const And = GateX1.define('And', {\n    attrs: { gate: { d: and_path }}\n}, {\n    binoperation(in1, in2) {\n        return in1.and(in2);\n    }\n});\nexport const AndView = GateView;\n\n// Nor gate model\nexport const Nor = GateX1.define('Nor', {\n    attrs: { gate: { d: or_path }}\n}, {\n    binoperation(in1, in2) {\n        return in1.or(in2);\n    },\n    finoperation(val) {\n        return val.not();\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([neg_markup])]),\n});\nexport const NorView = GateView;\n\n// Nand gate model\nexport const Nand = GateX1.define('Nand', {\n    attrs: { gate: { d: and_path }}\n}, {\n    binoperation(in1, in2) {\n        return in1.and(in2);\n    },\n    finoperation(val) {\n        return val.not();\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([neg_markup])]),\n});\nexport const NandView = GateView;\n\n// Xor gate model\nexport const Xor = GateX1.define('Xor', {\n    attrs: { gate: { d: or_path }}\n}, {\n    binoperation(in1, in2) {\n        return in1.xor(in2);\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([xor_arc_path_markup])]),\n});\nexport const XorView = GateView;\n\n// Xnor gate model\nexport const Xnor = GateX1.define('Xnor', {\n    attrs: { gate: { d: or_path }}\n}, {\n    binoperation(in1, in2) {\n        return in1.xor(in2);\n    },\n    finoperation(val) {\n        return val.not();\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([xor_arc_path_markup, neg_markup])]),\n});\nexport const XnorView = GateView;\n\n// Reducing Or gate model\nexport const OrReduce = GateReduce.define('OrReduce', {\n    attrs: { gate: { d: or_path }}\n}, {\n    operation(data) {\n        return { out: data.in.reduceOr() };\n    }\n});\nexport const OrReduceView = GateView;\n\n// Reducing Nor gate model\nexport const NorReduce = GateReduce.define('NorReduce', {\n    attrs: { gate: { d: or_path }}\n}, {\n    operation(data) {\n        return { out: data.in.reduceNor() };\n    },\n    markup: GateReduce.prototype.markup.concat([neg_markup])\n});\nexport const NorReduceView = GateView;\n\n// Reducing And gate model\nexport const AndReduce = GateReduce.define('AndReduce', {\n    attrs: { gate: { d: and_path }}\n}, {\n    operation(data) {\n        return { out: data.in.reduceAnd() };\n    }\n});\nexport const AndReduceView = GateView;\n\n// Reducing Nand gate model\nexport const NandReduce = GateReduce.define('NandReduce', {\n    attrs: { gate: { d: and_path }}\n}, {\n    operation(data) {\n        return { out: data.in.reduceNand() };\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([neg_markup])]),\n});\nexport const NandReduceView = GateView;\n\n// Reducing Xor gate model\nexport const XorReduce = GateReduce.define('XorReduce', {\n    attrs: { gate: { d: or_path }}\n}, {\n    operation(data) {\n        return { out: data.in.reduceXor() };\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([xor_arc_path_markup])]),\n});\nexport const XorReduceView = GateView;\n\n// Reducing Xnor gate model\nexport const XnorReduce = GateReduce.define('XnorReduce', {\n    attrs: { gate: { d: or_path }}\n}, {\n    operation(data) {\n        return { out: data.in.reduceXnor() };\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([xor_arc_path_markup, neg_markup])]),\n});\nexport const XnorReduceView = GateView;\n\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport { Gate, GateView } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl } from '3vl';\n\nfunction isSafeInteger(v) {\n    return v <= Number.MAX_SAFE_INTEGER && v >= -Number.MAX_SAFE_INTEGER;\n}\n\n// base class for arithmetic operations displayed with a circle\nexport const Arith = Gate.define('Arith', {\n    size: { width: 40, height: 40 },\n    attrs: {\n        body: { refR: 0.5, refCx: 0.5, refCy: 0.5 },\n        oper: {\n            refX: .5, refY: .5,\n            textAnchor: 'middle', textVerticalAnchor: 'middle',\n            fontSize: '12pt'\n        }\n    },\n    ports: {\n        groups: {\n            'in': { position: { name: 'left', args: { dx: 10 } }, attrs: { wire: { x2: -35 }, port: { refX: -35 } }, z: -1 },\n            'out': { position: { name: 'right', args: { dx: -10 } }, attrs: { wire: { x2: 35 }, port: { refX: 35 } }, z: -1 }\n        }\n    }\n}, {\n    markup: Gate.prototype.markup.concat([{\n            tagName: 'circle',\n            className: 'body',\n            selector: 'body'\n        }, {\n            tagName: 'text',\n            className: 'oper',\n            selector: 'oper'\n        }\n    ]),\n    _gateParams: Gate.prototype._gateParams.concat(['bits', 'signed']),\n    _unsupportedPropChanges: Gate.prototype._unsupportedPropChanges.concat(['signed'])\n});\n\n// Unary arithmetic operations\nexport const Arith11 = Arith.define('Arith11', {\n    /* default properties */\n    bits: { in: 1, out: 1 },\n    signed: false\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits.in },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.out }\n        ];\n        \n        Arith.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_,bits) => {\n            this._setPortsBits(bits);\n        });\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        if (!data.in.isFullyDefined)\n            return { out: Vector3vl.xes(bits.out) };\n        return {\n            out: Vector3vl.fromNumber(this.arithop(data.in.toBigInt(this.get('signed'))), bits.out)\n        };\n    },\n    _operationHelpers: Arith.prototype._operationHelpers.concat(['arithop'])\n});\n\n// Binary arithmetic operations\nexport const Arith21 = Arith.define('Arith21', {\n    /* default properties */\n    bits: { in1: 1, in2: 1, out: 1 },\n    signed: { in1: false, in2: false }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in1', group: 'in', dir: 'in', bits: bits.in1 },\n            { id: 'in2', group: 'in', dir: 'in', bits: bits.in2 },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.out }\n        ];\n        \n        Arith.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_, bits) => {\n            this._setPortsBits(bits);\n        });\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        if (!data.in1.isFullyDefined || !data.in2.isFullyDefined)\n            return { out: Vector3vl.xes(bits.out) };\n        return {\n            out: Vector3vl.fromNumber(this.arithop(\n                    data.in1.toBigInt(sgn.in1 && sgn.in2),\n                    data.in2.toBigInt(sgn.in1 && sgn.in2)), bits.out)\n        };\n    },\n    _operationHelpers: Arith.prototype._operationHelpers.concat(['arithop'])\n});\n\nfunction shiftHelp(in1, am, bits_in, bits_out, sgn_in, sgn_out, fillx) {\n    const signbit = in1.get(in1.bits-1);\n    const ext = Vector3vl.make(Math.max(0, bits_out - bits_in),\n        fillx ? 0 : sgn_in ? signbit : -1);\n    const my_in = in1.concat(ext);\n    const out = am < 0\n        ? Vector3vl.make(-am, fillx ? 0 : -1).concat(my_in)\n        : my_in.slice(am).concat(Vector3vl.make(am, fillx ? 0 : sgn_out ? my_in.get(my_in.bits-1) : -1));\n    return out.slice(0, bits_out);\n}\n\n// Bit shift operations\nexport const Shift = Arith.define('Shift', {\n    /* default properties */\n    bits: { in1: 1, in2: 1, out: 1 },\n    signed: { in1: false, in2: false, out: false },\n    fillx: false\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in1', group: 'in', dir: 'in', bits: bits.in1 },\n            { id: 'in2', group: 'in', dir: 'in', bits: bits.in2 },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.out }\n        ];\n        \n        Arith.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_, bits) => {\n            this._setPortsBits(bits);\n        });\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        const fillx = this.get('fillx');\n        if (!data.in2.isFullyDefined)\n            return { out: Vector3vl.xes(bits.out) };\n        const am = data.in2.toNumber(sgn.in2) * this.shiftdir;\n        return { out: shiftHelp(data.in1, am, bits.in1, bits.out, sgn.in1, sgn.out, fillx) };\n    },\n    _gateParams: Arith.prototype._gateParams.concat(['fillx']),\n    _unsupportedPropChanges: Arith.prototype._unsupportedPropChanges.concat(['fillx']),\n    _operationHelpers: Arith.prototype._operationHelpers.concat(['shiftdir'])\n});\n\n// Comparison operations\nexport const BaseCompare = Arith.define('BaseCompare', {\n    /* default properties */\n    bits: { in1: 1, in2: 1 },\n    signed: { in1: false, in2: false }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in1', group: 'in', dir: 'in', bits: bits.in1 },\n            { id: 'in2', group: 'in', dir: 'in', bits: bits.in2 },\n            { id: 'out', group: 'out', dir: 'out', bits: 1 }\n        ];\n        \n        Arith.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_, bits) => {\n            this._setPortsBits(bits);\n        });\n    }\n});\n\n// Arithmetic comparison operations\nexport const Compare = BaseCompare.define('Compare', {}, {\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        if (!data.in1.isFullyDefined || !data.in2.isFullyDefined)\n            return { out: Vector3vl.xes(1) };\n        return {\n            out: Vector3vl.fromBool(this.arithcomp(\n                    data.in1.toBigInt(sgn.in1 && sgn.in2),\n                    data.in2.toBigInt(sgn.in1 && sgn.in2)))\n        };\n    },\n    _operationHelpers: BaseCompare.prototype._operationHelpers.concat(['arithcomp'])\n});\n\n// Equality operations\nexport const EqCompare = BaseCompare.define('EqCompare', {}, {\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        const in1 = bits.in1 >= bits.in2 ? data.in1 : \n            data.in1.concat(Vector3vl.make(bits.in2 - bits.in1, sgn.in1 && sgn.in2 ? data.in1.msb : -1));\n        const in2 = bits.in2 >= bits.in1 ? data.in2 : \n            data.in2.concat(Vector3vl.make(bits.in1 - bits.in2, sgn.in1 && sgn.in2 ? data.in2.msb : -1));\n        return {\n            out: this.bincomp(in1, in2)\n        };\n    },\n    _operationHelpers: BaseCompare.prototype._operationHelpers.concat(['bincomp'])\n});\n\n// Negation\nexport const Negation = Arith11.define('Negation', {\n    attrs: {\n        oper: { text: '-' }\n    }\n}, {\n    arithop: i => -i\n});\nexport const NegationView = GateView;\n\n// Unary plus\nexport const UnaryPlus = Arith11.define('UnaryPlus', {\n    attrs: {\n        oper: { text: '+' }\n    }\n}, {\n    arithop: i => i\n});\nexport const UnaryPlusView = GateView;\n\n// Addition\nexport const Addition = Arith21.define('Addition', {\n    attrs: {\n        oper: { text: '+' }\n    }\n}, {\n    arithop: (i, j) => i + j\n});\nexport const AdditionView = GateView;\n\n// Subtraction\nexport const Subtraction = Arith21.define('Subtraction', {\n    attrs: {\n        oper: { text: '-' }\n    }\n}, {\n    arithop: (i, j) => i - j\n});\nexport const SubtractionView = GateView;\n\n// Multiplication\nexport const Multiplication = Arith21.define('Multiplication', {\n    attrs: {\n        oper: { text: '×' }\n    }\n}, {\n    arithop: (i, j) => i * j\n});\nexport const MultiplicationView = GateView;\n\n// Division\nexport const Division = Arith21.define('Division', {\n    attrs: {\n        oper: { text: '÷' }\n    }\n}, {\n    arithop: (i, j) => j == 0n ? i : i / j // as in IEEE Verilog\n});\nexport const DivisionView = GateView;\n\n// Modulo\nexport const Modulo = Arith21.define('Modulo', {\n    attrs: {\n        oper: { text: '%' }\n    }\n}, {\n    arithop: (i, j) => j == 0n ? i : i % j // as in IEEE Verilog\n});\nexport const ModuloView = GateView;\n\n// Power\nexport const Power = Arith21.define('Power', {\n    attrs: {\n        oper: { text: '^' }\n    }\n}, {\n    arithop: (i, j) => j >= 0n ? i ** j : i == 1n ? 1n : i == -1n ? (j % 2n ? -1n : 1n) : 0n\n});\nexport const PowerView = GateView;\n\n// Shift left operator\nexport const ShiftLeft = Shift.define('ShiftLeft', {\n    attrs: {\n        oper: { text: '≪' }\n    }\n}, {\n    shiftdir: -1\n});\nexport const ShiftLeftView = GateView;\n\n// Shift right operator\nexport const ShiftRight = Shift.define('ShiftRight', {\n    attrs: {\n        oper: { text: '≫' }\n    }\n}, {\n    shiftdir: 1\n});\nexport const ShiftRightView = GateView;\n\n// Less than operator\nexport const Lt = Compare.define('Lt', {\n    attrs: {\n        oper: { text: '<' }\n    }\n}, {\n    arithcomp: (i, j) => i < j\n});\nexport const LtView = GateView;\n\n// Less or equal operator\nexport const Le = Compare.define('Le', {\n    attrs: {\n        oper: { text: '≤' }\n    }\n}, {\n    arithcomp: (i, j) => i <= j\n});\nexport const LeView = GateView;\n\n// Greater than operator\nexport const Gt = Compare.define('Gt', {\n    attrs: {\n        oper: { text: '>' }\n    }\n}, {\n    arithcomp: (i, j) => i > j\n});\nexport const GtView = GateView;\n\n// Less than operator\nexport const Ge = Compare.define('Ge', {\n    attrs: {\n        oper: { text: '≥' }\n    }\n}, {\n    arithcomp: (i, j) => i >= j\n});\nexport const GeView = GateView;\n\n// Equality operator\nexport const Eq = EqCompare.define('Eq', {\n    attrs: {\n        oper: { text: '=' }\n    }\n}, {\n    bincomp: (i, j) => i.xnor(j).reduceAnd()\n});\nexport const EqView = GateView;\n\n// Nonequality operator\nexport const Ne = EqCompare.define('Ne', {\n    attrs: {\n        oper: { text: '≠' }\n    }\n}, {\n    bincomp: (i, j) => i.xor(j).reduceOr()\n});\nexport const NeView = GateView;\n\nexport const OpConst = Arith.define('OpConst', {\n    leftOp: false,\n    constant: 0\n}, {\n    initialize() {\n        Arith.prototype.initialize.apply(this, arguments);\n\n        let constant = this.get('constant');\n        if (typeof constant === 'string' || constant instanceof String) {\n            constant = BigInt(constant);\n            if (isSafeInteger(constant))\n                constant = Number(constant);\n            this.set('constant', constant);\n        }\n        const genLabel = () => {\n            const constantSize = String(this.get('constant')).length;\n            const diameter = 30 + constantSize * 10;\n            this.prop(\"size\", { width: diameter, height: diameter });\n            this.attr(\"oper/text\", \n                this.get('leftOp') ? this.get('constant') + this.operSymbol\n                                   : this.operSymbol + this.get('constant'))\n        };\n        genLabel();\n\n        this.on('change:bits', (_, bits) => {\n            this._setPortsBits(bits);\n        });\n        this.on('change:constant', () => genLabel());\n        this.on('change:leftOp', () => genLabel());\n    },\n    getGateParams() {\n        const params = Arith.prototype.getGateParams.apply(this, arguments);\n        // `constant` may be a bigint and we need to encode it manually\n        if (typeof params.constant === 'bigint') {\n            if (isSafeInteger(params.constant)) {\n                params.constant = Number(params.constant);\n            }\n            else {\n                params.constant = String(params.constant);\n            }\n        }\n        return params;\n    },\n    _gateParams: Arith.prototype._gateParams.concat(['leftOp', 'constant'])\n});\n\n// Arithmetic operations fused with constants\nexport const ArithConst = OpConst.define('ArithConst', {\n    /* default properties */\n    bits: { in: 1, out: 1 },\n    signed: false\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits.in },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.out }\n        ];\n        \n        OpConst.prototype.initialize.apply(this, arguments);\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        const constant = this.get('constant');\n        if (!data.in.isFullyDefined)\n            return { out: Vector3vl.xes(bits.out) };\n        if (this.get('leftOp'))\n            return {\n                out: Vector3vl.fromNumber(this.arithop(\n                    BigInt(constant),\n                    data.in.toBigInt(sgn.in)), bits.out)\n            }\n        else\n            return {\n                out: Vector3vl.fromNumber(this.arithop(\n                    data.in.toBigInt(sgn.in), BigInt(constant)), bits.out)\n            };\n    },\n    _operationHelpers: OpConst.prototype._operationHelpers.concat(['arithop'])\n});\n\n// Bit shift operations fused with constants\nexport const ShiftConst = OpConst.define('ShiftConst', {\n    /* default properties */\n    bits: { in: 1, out: 1 },\n    signed: { in: false, out: false },\n    fillx: false\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits.in },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.out }\n        ];\n        \n        OpConst.prototype.initialize.apply(this, arguments);\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        const fillx = this.get('fillx');\n        const constant = this.get('constant');\n        if (this.get('leftOp')) {\n            if (!data.in.isFullyDefined)\n                return { out: Vector3vl.xes(bits.out) };\n            const am = data.in.toNumber(sgn.in);\n            const sig = Vector3vl.fromNumber(constant);\n            return { \n                out: shiftHelp(sig, am * this.shiftdir, sig.bits, bits.out, constant < 0, sgn.out, fillx) \n            };\n        } else {\n            console.assert(isSafeInteger(constant));\n            return {\n                out: shiftHelp(data.in, Number(constant) * this.shiftdir, bits.in, bits.out, sgn.in, sgn.out, fillx)\n            };\n        }\n    },\n    _gateParams: OpConst.prototype._gateParams.concat(['fillx']),\n    _operationHelpers: OpConst.prototype._operationHelpers.concat(['shiftdir'])\n});\n\n// Comparison operations fused with constants\nexport const BaseCompareConst = OpConst.define('BaseCompareConst', {\n    /* default properties */\n    bits: { in: 1 },\n    signed: false\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits.in },\n            { id: 'out', group: 'out', dir: 'out', bits: 1 }\n        ];\n        \n        OpConst.prototype.initialize.apply(this, arguments);\n    }\n});\n\n// Arithmetic comparisons fused with constants\nexport const CompareConst = BaseCompareConst.define('CompareConst', {}, {\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        const constant = this.get('constant');\n        if (!data.in.isFullyDefined)\n            return { out: Vector3vl.x };\n        if (this.get('leftOp'))\n            return {\n                out: Vector3vl.fromBool(this.arithcomp(\n                    BigInt(constant),\n                    data.in.toBigInt(sgn.in)))\n            }\n        else\n            return {\n                out: Vector3vl.fromBool(this.arithcomp(\n                    data.in.toBigInt(sgn.in), \n                    BigInt(constant)))\n            };\n    },\n    _operationHelpers: BaseCompareConst.prototype._operationHelpers.concat(['arithcomp'])\n});\n\n// Equality operations fused with constants\nexport const EqCompareConst = BaseCompareConst.define('EqCompareConst', {}, {\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        const constant = this.get('constant');\n        if (this.get('leftOp'))\n            return {\n                out: this.bincomp(Vector3vl.fromNumber(constant, bits.in), data.in)\n            };\n        else\n            return {\n                out: this.bincomp(data.in, Vector3vl.fromNumber(constant, bits.in))\n            };\n    },\n    _operationHelpers: BaseCompareConst.prototype._operationHelpers.concat(['bincomp'])\n});\n\n// Addition with constant\nexport const AdditionConst = ArithConst.define('AdditionConst', {}, {\n    operSymbol: '+',\n    arithop: (i, j) => i + j\n});\nexport const AdditionConstView = GateView;\n\n// Subtraction with constant\nexport const SubtractionConst = ArithConst.define('SubtractionConst', {}, {\n    operSymbol: '-',\n    arithop: (i, j) => i - j\n});\nexport const SubtractionConstView = GateView;\n\n// Multiplication with constant\nexport const MultiplicationConst = ArithConst.define('MultiplicationConst', {}, {\n    operSymbol: '×',\n    arithop: (i, j) => i * j\n});\nexport const MultiplicationConstView = GateView;\n\n// Division with constant\nexport const DivisionConst = ArithConst.define('DivisionConst', {}, {\n    operSymbol: '÷',\n    arithop: (i, j) => j == 0n ? i : i / j // as in IEEE Verilog\n});\nexport const DivisionConstView = GateView;\n\n// Modulo with constant\nexport const ModuloConst = ArithConst.define('ModuloConst', {}, {\n    operSymbol: '%',\n    arithop: (i, j) => j == 0n ? i : i % j // as in IEEE Verilog\n});\nexport const ModuloConstView = GateView;\n\n// Power with constant\nexport const PowerConst = ArithConst.define('PowerConst', {}, {\n    operSymbol: '^',\n    arithop: (i, j) => j >= 0n ? i ** j : i == 1n ? 1n : i == -1n ? (j % 2n ? -1n : 1n) : 0n\n});\nexport const PowerConstView = GateView;\n\n// Shift left operator\nexport const ShiftLeftConst = ShiftConst.define('ShiftLeftConst', {}, {\n    operSymbol: '≪',\n    shiftdir: -1\n});\nexport const ShiftLeftConstView = GateView;\n\n// Shift right operator\nexport const ShiftRightConst = ShiftConst.define('ShiftRightConst', {}, {\n    operSymbol: '≫',\n    shiftdir: 1\n});\nexport const ShiftRightConstView = GateView;\n\n// Less than operator\nexport const LtConst = CompareConst.define('LtConst', {}, {\n    operSymbol: '<',\n    arithcomp: (i, j) => i < j\n});\nexport const LtConstView = GateView;\n\n// Less than operator\nexport const LeConst = CompareConst.define('LeConst', {}, {\n    operSymbol: '≤',\n    arithcomp: (i, j) => i <= j\n});\nexport const LeConstView = GateView;\n\n// Less than operator\nexport const GtConst = CompareConst.define('GtConst', {}, {\n    operSymbol: '>',\n    arithcomp: (i, j) => i > j\n});\nexport const GtConstView = GateView;\n\n// Less than operator\nexport const GeConst = CompareConst.define('GeConst', {}, {\n    operSymbol: '≥',\n    arithcomp: (i, j) => i >= j\n});\nexport const GeConstView = GateView;\n\n// Equality operator\nexport const EqConst = EqCompareConst.define('EqConst', {}, {\n    operSymbol: '=',\n    bincomp: (i, j) => i.xnor(j).reduceAnd()\n});\nexport const EqConstView = GateView;\n\n// Nonequality operator\nexport const NeConst = EqCompareConst.define('NeConst', {}, {\n    operSymbol: '≠',\n    bincomp: (i, j) => i.xor(j).reduceOr()\n});\nexport const NeConstView = GateView;\n\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport { Box, BoxView } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl } from '3vl';\n\n// Bit extending\nexport const BitExtend = Box.define('BitExtend', {\n    /* default properties */\n    extend: { input: 1, output: 1 },\n    propagation: 0,\n    \n    attrs: {\n        value: {\n            refX: .5, refY: .5,\n            textAnchor: 'middle', textVerticalAnchor: 'middle'\n        }\n    }\n}, {\n    initialize() {\n        const extend = this.get('extend');\n        console.assert(extend.input <= extend.output);\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: extend.input },\n            { id: 'out', group: 'out', dir: 'out', bits: extend.output }\n        ];\n        \n        Box.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:extend', (_, extend) => {\n            this._setPortsBits({ in: extend.input, out: extend.output });\n        });\n    },\n    operation(data) {\n        const ex = this.get('extend');\n        return { out: data.in.concat(Vector3vl.make(ex.output - ex.input, this._extBit(data.in))) };\n    },\n    markup: Box.prototype.markup.concat([{\n            tagName: 'text',\n            className: 'value',\n            selector: 'value'\n        }\n    ]),\n    _gateParams: Box.prototype._gateParams.concat(['extend']),\n    _operationHelpers: Box.prototype._operationHelpers.concat(['_extBit'])\n});\nexport const BitExtendView = BoxView.extend({\n    _autoResizeBox: true,\n    _calculateBoxWidth() {\n        const text = this.el.querySelector('text.value');\n        return text.getBBox().width + 10;\n    }\n});\n\nexport const ZeroExtend = BitExtend.define('ZeroExtend', {\n    attrs: {\n        value: { text: 'zero-extend' }\n    }\n}, {\n    _extBit(i) {\n        return -1;\n    }\n});\nexport const ZeroExtendView = BitExtendView;\n\nexport const SignExtend = BitExtend.define('SignExtend', {\n    attrs: {\n        value: { text: 'sign-extend' }\n    }\n}, {\n    _extBit(i) {\n        return i.get(i.bits - 1);\n    }\n});\nexport const SignExtendView = BitExtendView;\n\n// Bus slicing\nexport const BusSlice = Box.define('BusSlice', {\n    /* default properties */\n    slice: { first: 0, count: 1, total: 2 },\n    propagation: 0,\n    \n    size: { width: 40, height: 24 }\n}, {\n    initialize() {\n        const slice = this.get('slice');\n        \n        const val = slice.count == 1 ? slice.first : \n            slice.first + \"-\" + (slice.first + slice.count - 1);\n        \n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: slice.total },\n            { id: 'out', group: 'out', dir: 'out', bits: slice.count, portlabel: val, labelled: true }\n        ];\n        \n        Box.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:slice', (_, slice) => {\n            this._setPortsBits({ in: slice.total, out: slice.count });\n        });\n    },\n    operation(data) {\n        const s = this.get('slice');\n        return { out: data.in.slice(s.first, s.first + s.count) };\n    },\n    _gateParams: Box.prototype._gateParams.concat(['slice'])\n});\nexport const BusSliceView = BoxView.extend({\n    _autoResizeBox: true\n});\n\n// Bus grouping\nexport const BusRegroup = Box.define('BusRegroup', {\n    /* default properties */\n    groups: [1],\n    propagation: 0,\n\n    size: { width: 40, height: undefined }\n}, {\n    initialize() {\n        var bits = 0;\n        const ports = [];\n        const groups = this.get('groups');\n        \n        this.get('size').height = groups.length*16+8;\n        \n        for (const [num, gbits] of groups.entries()) {\n            const lbl = bits + (gbits > 1 ? '-' + (bits + gbits - 1) : '');\n            bits += gbits;\n            ports.push({ id: this.group_dir + num, group: this.group_dir, dir: this.group_dir, bits: gbits, portlabel: lbl, labelled: true });\n        }\n        this.set('bits', bits);\n        \n        const contra = this.group_dir == 'out' ? 'in' : 'out';\n        ports.push({ id: contra, group: contra, dir: contra, bits: bits });\n        this.get('ports').items = ports;\n        \n        Box.prototype.initialize.apply(this, arguments);\n    },\n    _gateParams: Box.prototype._gateParams.concat(['groups']),\n    _unsupportedPropChanges: Box.prototype._unsupportedPropChanges.concat(['groups'])\n});\nexport const BusRegroupView = BoxView.extend({\n    _autoResizeBox: true\n});\n\nexport const BusGroup = BusRegroup.define('BusGroup', {\n}, {\n    group_dir : 'in',\n    operation(data) {\n        const outdata = [];\n        for (const num of this.get('groups').keys()) {\n            outdata.push(data['in' + num]);\n        }\n        return { out : Vector3vl.concat(...outdata) };\n    }\n});\nexport const BusGroupView = BusRegroupView;\n\nexport const BusUngroup = BusRegroup.define('BusUngroup', {\n}, {\n    group_dir : 'out',\n    operation(data) {\n        const outdata = {};\n        let pos = 0;\n        for (const [num, gbits] of this.get('groups').entries()) {\n            outdata['out' + num] = data.in.slice(pos, pos + gbits);\n            pos += gbits;\n        }\n        return outdata;\n    }\n});\nexport const BusUngroupView = BusRegroupView;\n\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport _ from 'lodash';\nimport { Box, BoxView } from './base.mjs';\nimport { IO, Input, Output } from './io.mjs';\nimport * as help from '../help.mjs';\n\n// add offset of 10pt to account for the top label at layout time\nconst subcircuit_pos_offset = 10;\nconst subcircuit_size_offset = 10;\n\n// Subcircuit model -- embeds a circuit graph in an element\nexport const Subcircuit = Box.define('Subcircuit', {\n    /* default properties */\n    propagation: 0,\n    warning: false,\n\n    attrs: {\n        wrapper: {\n            refWidth: 1, refHeight: 1,\n            stroke: 'red', strokeWidth: 10\n        },\n        type: {\n            refX: .5, refY: -10,\n            textAnchor: 'middle', textVerticalAnchor: 'middle'\n        }\n    }\n}, {\n    initialize() {\n        this.bindAttrToProp('text.type/text', 'celltype');\n        \n        const graph = this.get('graph');\n        console.assert(graph instanceof joint.dia.Graph);\n        graph.set('subcircuit', this);\n        const IOs = graph.getCells()\n            .filter((cell) => cell instanceof IO);\n        const inputs = IOs.filter((cell) => cell instanceof Input);\n        const outputs = IOs.filter((cell) => cell instanceof Output);\n        function sortfun(x, y) {\n            if (x.has('order') || y.has('order'))\n                return x.get('order') - y.get('order');\n            return x.get('net').localeCompare(y.get('net'));\n        }\n        inputs.sort(sortfun);\n        outputs.sort(sortfun);\n        const vcount = Math.max(inputs.length, outputs.length);\n        const size = { width: 80, height: vcount*16+8 };\n        const ports = [], iomap = {};\n        for (const [num, io] of inputs.entries()) {\n            ports.push({ id: io.get('net'), group: 'in', dir: 'in', bits: io.get('bits'), labelled: true });\n        }\n        for (const [num, io] of outputs.entries()) {\n            ports.push({ id: io.get('net'), group: 'out', dir: 'out', bits: io.get('bits'), labelled: true });\n        }\n        for (const io of IOs) {\n            iomap[io.get('net')] = io.get('id');\n        }\n        this.set('size', size);\n        this.set('circuitIOmap', iomap);\n        this.get('ports').items = ports;\n        this.set('warning', graph._warnings > 0);\n        \n        Box.prototype.initialize.apply(this, arguments);\n    },\n    _resetPortValue(port) {\n        const iomap = this.get('circuitIOmap');\n        const graph = this.get('graph');\n        if (port.dir == 'in')\n            return graph.getCell(iomap[port.id]).get('outputSignals').out;\n        if (port.dir == 'out')\n            return graph.getCell(iomap[port.id]).get('inputSignals').in;\n        return Box.prototype._resetPortValue.call(this, port);\n    },\n    getLayoutSize() {\n        const size = this.size();\n        size.height += subcircuit_size_offset;\n        return size;\n    },\n    setLayoutPosition(position) {\n        this.set('position', {\n            x: position.x,\n            y: position.y + subcircuit_pos_offset\n        });\n    },\n    getPortsPositions() {\n        const positions = Box.prototype.getPortsPositions.apply(this, arguments);\n        const res = {};\n        for (const id in positions) {\n            res[id] = { ...positions[id] };\n            res[id].y = res[id].y + subcircuit_pos_offset;\n        }\n        return res;\n    },\n    markup: [{\n            tagName: 'rect',\n            selector: 'wrapper'\n        }\n    ].concat(Box.prototype.markup, [{\n            tagName: 'text',\n            className: 'type',\n            selector: 'type'\n        }\n    ], Box.prototype.markupZoom),\n    _gateParams: Box.prototype._gateParams.concat(['celltype']),\n    _unsupportedPropChanges: Box.prototype._unsupportedPropChanges.concat(['celltype'])\n});\n\nexport const SubcircuitView = BoxView.extend({\n    attrs: _.merge({}, BoxView.prototype.attrs, {\n        warning: {\n            warn: { wrapper: { 'stroke-opacity': '0.5' } },\n            none: { wrapper: { 'stroke-opacity': '0' } }\n        }\n    }),\n    _autoResizeBox: true,\n    presentationAttributes: BoxView.addPresentationAttributes({\n        warning: 'WARNING'\n    }),\n    confirmUpdate(flags) {\n        BoxView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'WARNING')) {\n            this._updateWarning();\n        }\n    },\n    _updateWarning() {\n        const warning = this.model.get('warning');\n        const attrs = this.attrs.warning[\n            warning ? 'warn' : 'none'\n        ];\n        this._applyAttrs(attrs);\n    },\n    update() {\n        BoxView.prototype.update.apply(this, arguments);\n        this._updateWarning();\n    },\n    events: {\n        \"click foreignObject.tooltip\": \"stopprop\",\n        \"mousedown foreignObject.tooltip\": \"stopprop\",\n        \"touchstart foreignObject.tooltip\": \"stopprop\", // make sure the input receives focus\n        \"click a.zoom\": \"zoomInCircuit\"\n    },\n    zoomInCircuit(evt) {\n        evt.stopPropagation();\n        this.paper.trigger('open:subcircuit', this.model);\n        return false;\n    }\n});\n\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport _ from 'lodash';\nimport { Gate, GateView, portGroupAttrs } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl } from '3vl';\n\n// add offset of 30pt to account for the top selection port and oversized box at layout time\nconst mux_pos_offset = 20;\nconst mux_size_offset = 30;\n\n// Multiplexers\nexport const GenMux = Gate.define('GenMux', {\n    /* default properties */\n    bits: { in: 1, sel: 1 },\n    \n    size: { width: 40, height: undefined },\n    ports: {\n        groups: {\n            'in2': {\n                position: { name: 'top', args: { y: 5 } },\n                attrs: _.merge({}, portGroupAttrs, {\n                    wire: { x2: 0, y2: -25 },\n                    port: { magnet: 'passive', refY: -25 },\n                    bits: { refDx: -5, refDy: 2, textAnchor: 'start' }\n                }),\n                z: -1\n            }\n        }\n    },\n    attrs: { label: { refDy: 8 } }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        const ports = [\n            { id: 'sel', group: 'in2', dir: 'in', bits: bits.sel },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.in }\n        ];\n        \n        const ins = this.muxInputs(bits.sel);\n        this.get('size').height = ins.length*16+8;\n        \n        const vpath = [\n            [2, 0],\n            [5, 5],\n            [10, -5]\n        ];\n        const path = 'M' + vpath.map(l => l.join(' ')).join(' L');\n        \n        for (const [num, label] of ins.entries()) {\n            const port = { id: 'in' + num, group: 'in', dir: 'in', bits: bits.in, decor: path };\n            if (label) {\n                port.portlabel = String(label);\n                port.labelled = true;\n            }\n            ports.push(port);\n        }\n        \n        this.get('ports').items = ports;\n        \n        Gate.prototype.initialize.apply(this, arguments);\n        \n        const drawBorder = (size) => this.attr(['body', 'points'], \n            [[0,-5],[size.width,5],[size.width,size.height-5],[0,size.height+5]]\n                .map(x => x.join(',')).join(' '));\n        drawBorder(this.get('size'));\n        \n        this.on('change:size', (_, size) => drawBorder(size));\n    },\n    operation(data) {\n        const i = this.muxInput(data.sel);\n        if (i === undefined) return { out: Vector3vl.xes(this.get('bits').in) };\n        return { out: data['in' + i] };\n    },\n    getLayoutSize() {\n        const size = this.size();\n        size.height += mux_size_offset;\n        return size;\n    },\n    setLayoutPosition(position) {\n        this.set('position', {\n            x: position.x,\n            y: position.y + mux_pos_offset\n        });\n    },\n    getPortsPositions() {\n        const positions = Gate.prototype.getPortsPositions.apply(this, arguments);\n        const res = {};\n        for (const id in positions) {\n            res[id] = { ...positions[id] };\n            res[id].y = res[id].y + mux_pos_offset;\n        }\n        return res;\n    },\n    markup: Gate.prototype.markup.concat([{\n            tagName: 'polygon',\n            className: 'body',\n            selector: 'body'\n        }\n    ]),\n    _gateParams: Gate.prototype._gateParams.concat(['bits']),\n    _unsupportedPropChanges: Gate.prototype._unsupportedPropChanges.concat(['bits']),\n    _operationHelpers: Gate.prototype._operationHelpers.concat(['muxInput'])\n});\nexport const GenMuxView = GateView.extend({\n    initialize() {\n        this.ins = this.model.muxInputs(this.model.get('bits').sel);\n        GateView.prototype.initialize.apply(this, arguments);\n    },\n    confirmUpdate(flags) {\n        GateView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'SIGNAL')) {\n            this._updateMux(this.model.get('inputSignals'));\n        }\n    },\n    render() {\n        GateView.prototype.render.apply(this, arguments);\n        this._updateMux(this.model.get('inputSignals'));\n    },\n    _updateMux(data) {\n        const i = this.model.muxInput(data.sel);\n        for (const num of this.ins.keys()) {\n            this.$('[port=in' + num + '] path.decor').css('visibility', i == num ? 'visible' : 'hidden');\n        }\n    }\n});\n\n// Multiplexer with binary selection\nexport const Mux = GenMux.define('Mux', {\n}, {\n    muxInputs: n => Array(1 << n),\n    muxInput: i => i.isFullyDefined ? i.toBigInt().toString() : undefined\n});\nexport const MuxView = GenMuxView;\n\n// Multiplexer with one-hot selection\nexport const Mux1Hot = GenMux.define('Mux1Hot', {\n    attrs: {\n        info: {\n            refX: .5, refY: .5,\n            textAnchor: 'middle', textVerticalAnchor: 'middle',\n            text: '1Hot',\n            transform: 'rotate(90)'\n        }\n    }\n}, {\n    markup: GenMux.prototype.markup.concat([{\n            tagName: 'text',\n            className: 'info',\n            selector: 'info'\n        }\n    ]),\n    muxInputs: n => Array(n + 1),\n    muxInput: s => {\n        const i = s.toArray();\n        return s.isFullyDefined && i.filter(x => x == 1).length <= 1\n            ? String(i.indexOf(1)+1) : undefined\n    }\n});\nexport const Mux1HotView = GenMuxView;\n\nexport const MuxSparse = GenMux.define('MuxSparse', {\n    /* default properties */\n    inputs: undefined,\n    default_input: false\n}, {\n    initialize() {\n        const inputs = this.get('inputs');\n        for (let i = 0; i < inputs.length; i++)\n            if (typeof inputs[i] != 'bigint')\n                inputs[i] = BigInt(inputs[i]);\n        GenMux.prototype.initialize.apply(this, arguments);\n    },\n    muxInputs(n) {\n        if (this.get('default_input'))\n            return ['*'].concat(this.get('inputs'))\n        else\n            return this.get('inputs');\n    },\n    muxInput(i) {\n        const deflt = this.get('default_input');\n        if (!i.isFullyDefined) return undefined;\n        const idx = this.get('inputs').indexOf(i.toBigInt());\n        return idx < 0 ? (deflt ? 0 : undefined) : (deflt ? idx + 1 : idx);\n    },\n    _gateParams: GenMux.prototype._gateParams.concat(['inputs', 'default_input']),\n    _unsupportedPropChanges: GenMux.prototype._unsupportedPropChanges.concat(['inputs', 'default_input'])\n});\nexport const MuxSparseView = GenMuxView;\n\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport { Box, BoxView } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl } from '3vl';\n\n// D flip-flops\nexport const Dff = Box.define('Dff', {\n    /* default properties */\n    bits: 1,\n    initial: 'x',\n\n    size: { width: 80, height: undefined },\n    ports: {\n        groups: {\n            'in': {\n                position: Box.prototype._getStackedPosition({ side: 'left' })\n            },\n            'out': {\n                position: Box.prototype._getStackedPosition({ side: 'right' })\n            }\n        }\n    }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        const initial = this.get('initial');\n        const polarity = this.get('polarity') || {};\n        \n        const ports = [];\n       \n        if (!this.get('no_data'))\n            ports.push({ id: 'in', group: 'in', dir: 'in', bits: bits, portlabel: 'D', labelled: true });\n        ports.push({ id: 'out', group: 'out', dir: 'out', bits: bits, portlabel: 'Q', labelled: true });\n        \n        if ('arst' in polarity && !this.get('arst_value'))\n            this.set('arst_value', Array(bits).fill('0').join(''));\n        \n        if ('srst' in polarity && !this.get('srst_value'))\n            this.set('srst_value', Array(bits).fill('0').join(''));\n\n        let num = 1;\n        if ('aload' in polarity) {\n            num += 2;\n            ports.push({ id: 'ain', group: 'in', dir: 'in', bits: bits, portlabel: 'AD', labelled: true });\n            ports.push({ id: 'aload', group: 'in', dir: 'in', bits: 1, polarity: polarity.aload, labelled: true });\n        }\n        if ('clock' in polarity) {\n            num++;\n            ports.push({ id: 'clk', group: 'in', dir: 'in', bits: 1, polarity: polarity.clock, decor: Box.prototype.decorClock, labelled: true });\n        }\n        if ('set' in polarity) {\n            num++;\n            ports.push({ id: 'set', group: 'in', dir: 'in', bits: bits, polarity: polarity.set, portlabel: 'S', labelled: true });\n        }\n        if ('clr' in polarity) {\n            num++;\n            ports.push({ id: 'clr', group: 'in', dir: 'in', bits: bits, polarity: polarity.clr, portlabel: 'R', labelled: true });\n        }\n        if ('srst' in polarity) {\n            num++;\n            ports.push({ id: 'srst', group: 'in', dir: 'in', bits: 1, polarity: polarity.srst, labelled: true });\n        }\n        if ('arst' in polarity) {\n            num++;\n            ports.push({ id: 'arst', group: 'in', dir: 'in', bits: 1, polarity: polarity.arst, labelled: true });\n        }\n        if ('enable' in polarity) {\n            num++;\n            ports.push({ id: 'en', group: 'in', dir: 'in', bits: 1, polarity: polarity.enable, labelled: true });\n        }\n        \n        this.get('size').height = num*16+8;\n        this.get('ports').items = ports;\n        this.last_clk = 0;\n        \n        Box.prototype.initialize.apply(this, arguments);\n    },\n    _resetPortValue(port) {\n        if (port.id == \"out\" && port.dir == \"out\")\n            return Vector3vl.fromBin(this.get('initial'), port.bits);\n        else return Box.prototype._resetPortValue.call(this, port);\n    },\n    operation(data) {\n        const polarity = this.get('polarity');\n        const pol = what => polarity[what] ? 1 : -1\n        let last_clk, srbits, srbitmask;\n        const apply_sr = (v) => ({out: srbits ? v.and(srbitmask).or(srbits) : v});\n        if ('clock' in polarity) {\n            last_clk = this.last_clk;\n            this.last_clk = data.clk.get(0);\n        }\n        if ('arst' in polarity && data.arst.get(0) == pol('arst'))\n            return { out: Vector3vl.fromBin(this.get('arst_value'), this.get('bits')) };\n        if ('aload' in polarity && data.aload.get(0) == pol('aload'))\n            return { out: data.ain };\n        if ('set' in polarity) {\n            srbits = polarity.set ? data.set : data.set.not();\n            srbitmask = polarity.set ? data.set.not() : data.set;\n        }\n        if ('clr' in polarity) {\n            srbits = srbits ? srbits : Vector3vl.zeros(this.get('bits'));\n            const clrbitmask = polarity.clr ? data.clr.not() : data.clr;\n            srbitmask = srbitmask ? clrbitmask.and(srbitmask) : clrbitmask;\n        }\n        if ('enable' in polarity && data.en.get(0) != pol('enable') && this.get('enable_srst'))\n            return apply_sr(this.get('outputSignals').out);\n        if (!('clock' in polarity) || data.clk.get(0) == pol('clock') && last_clk == -pol('clock')) {\n            if ('srst' in polarity && data.srst.get(0) == pol('srst'))\n                return apply_sr(Vector3vl.fromBin(this.get('srst_value'), this.get('bits')));\n            if ('enable' in polarity && data.en.get(0) != pol('enable') && !this.get('enable_srst'))\n                return apply_sr(this.get('outputSignals').out);\n            if (this.get('no_data'))\n                return apply_sr(this.get('outputSignals').out);\n            return apply_sr(data.in);\n        } else return apply_sr(this.get('outputSignals').out);\n    },\n    _gateParams: Box.prototype._gateParams.concat(['polarity', 'bits', 'initial', 'arst_value', 'srst_value', 'enable_srst', 'no_data']),\n    _unsupportedPropChanges: Box.prototype._unsupportedPropChanges.concat(['polarity', 'bits', 'initial', 'arst_value', 'srst_value', 'enable_srst', 'no_data'])\n});\nexport const DffView = BoxView.extend({\n    _autoResizeBox: true\n});\n\n","\"use strict\";\n\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport * as joint from 'jointjs';\nimport { Box, BoxView } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl, Mem3vl } from '3vl';\n\n// Memory cell\nexport const Memory = Box.define('Memory', {\n    /* default properties */\n    bits: 1,\n    abits: 1,\n    rdports: [],\n    wrports: [],\n    words: undefined,\n    offset: 0,\n    \n    attrs: {\n        portsplit: {\n            stroke: 'black'\n        }\n    },\n    ports: {\n        groups: {\n            'in': {\n                position: Box.prototype._getStackedPosition({ side: 'left' })\n            },\n            'out': {\n                position: Box.prototype._getStackedPosition({ side: 'right' })\n            }\n        }\n    }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        const abits = this.get('abits');\n        const rdports = this.get('rdports');\n        const wrports = this.get('wrports');\n        \n        let num = 0;\n        let idxOffset = 0;\n        const ports = [], portsplits = [];\n        for (const [portname, port] of this._memrdports()) {\n            ports.push(\n                { id: portname + 'addr', group: 'in', dir: 'in', bits: abits, portlabel: 'addr', labelled: true },\n                { id: portname + 'data', group: 'out', dir: 'out', bits: bits, portlabel: 'data', labelled: true, args: { idxOffset: idxOffset } }\n            );\n            num += 1;\n            if ('srst_polarity' in port) {\n                num++;\n                idxOffset++;\n                ports.push({ id: portname + 'srst', group: 'in', dir: 'in', bits: 1, portlabel: 'srst', polarity: port.srst_polarity, labelled: true });\n            }\n            if ('arst_polarity' in port) {\n                num++;\n                idxOffset++;\n                ports.push({ id: portname + 'arst', group: 'in', dir: 'in', bits: 1, portlabel: 'arst', polarity: port.arst_polarity, labelled: true });\n            }\n            if ('enable_polarity' in port) {\n                num++;\n                idxOffset++;\n                ports.push({ id: portname + 'en', group: 'in', dir: 'in', bits: 1, portlabel: 'en', polarity: port.enable_polarity, labelled: true });\n            }\n            if ('clock_polarity' in port) {\n                num++;\n                idxOffset++;\n                ports.push({ id: portname + 'clk', group: 'in', dir: 'in', bits: 1, portlabel: 'clk', polarity: port.clock_polarity, decor: Box.prototype.decorClock, labelled: true });\n            }\n            portsplits.push(num);\n        }\n        for (const [portname, port] of this._memwrports()) {\n            num += 2;\n            ports.push(\n                { id: portname + 'data', group: 'in', dir: 'in', bits: bits, portlabel: 'data', labelled: true },\n                { id: portname + 'addr', group: 'in', dir: 'in', bits: abits, portlabel: 'addr', labelled: true }\n            );\n            if ('enable_polarity' in port) {\n                num++;\n                ports.push({ id: portname + 'en', group: 'in', dir: 'in', bits: port.no_bit_enable ? 1 : bits, portlabel: 'en', polarity: port.enable_polarity, labelled: true });\n            }\n            if ('clock_polarity' in port) {\n                num++;\n                ports.push({ id: portname + 'clk', group: 'in', dir: 'in', bits: 1, portlabel: 'clk', polarity: port.clock_polarity, decor: Box.prototype.decorClock, labelled: true });\n            }\n            portsplits.push(num);\n        }\n        portsplits.pop();\n        this.get('size').height = num*16+8;\n        this.get('ports').items = ports;\n        \n        Box.prototype.initialize.apply(this, arguments);\n        \n        this.removeProp('memdata'); // performance hack\n        \n        this.on('change:size', (_, size) => {\n            // only adapting to changed width\n            const path = [];\n            for (const num of portsplits) {\n                path.push([\n                    [0, 16*num + 4],\n                    [size.width, 16*num + 4]\n                ].map(p => p.join(' ')).join(' L '));\n            }\n            this.attr('path.portsplit/d', 'M ' + path.join(' M '));\n        });\n    },\n    _resetPortValue(port) {\n        if (port.dir == \"out\") {\n            const res = /^rd([0-9]+)data$/.exec(port.id);\n            const portdata = res ? this.get('rdports')[res[1]] : {};\n            if ('init_value' in portdata)\n                return Vector3vl.fromBin(portdata.init_value, port.bits);\n        }\n        return Box.prototype._resetPortValue.call(this, port);\n    },\n    prepare() {\n        const bits = this.get('bits');\n        var words = this.get('words');\n        const memdata = this.get('memdata');\n        \n        if (!words) {\n            words = 1 << abits;\n            this.prop('words', words, { init: true });\n        }\n        if (memdata)\n            this.memdata = Mem3vl.fromJSON(bits, memdata);\n        else\n            this.memdata = new Mem3vl(bits, words);\n        console.assert(this.memdata.words == words);\n        \n        this.last_clk = {};\n        for (const [portname, port] of this._memports()) {\n            if ('clock_polarity' in port)\n                this.last_clk[portname + 'clk'] = 0;\n        }\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        const out = {};\n        const pol = (port, what) => port[what + '_polarity'] ? 1 : -1;\n        const is_enabled = (portname, port) => {\n            if ('enable_polarity' in port && !data[portname + 'en'].toArray().some(x => x == pol(port, 'enable')))\n                return false;\n            return true;\n        };\n        const port_active = (portname, port) => {\n            const clkname = portname + 'clk';\n            if ('clock_polarity' in port) {\n                return (data[clkname].get(0) == pol(port, 'clock') && this.last_clk[clkname] == -pol(port, 'clock'));\n            }\n            return true;\n        };\n        const valid_addr = n => n >= 0 && n < this.get('words');\n        const do_comb_read = (portname, port) => {\n            const addr = this._calcaddr(data[portname + 'addr']);\n            if (valid_addr(addr))\n                out[portname + 'data'] = this.memdata.get(addr);\n            else\n                out[portname + 'data'] = Vector3vl.xes(bits);\n        };\n        const write_value = (portname, port, oldval, val) => {\n            if (port.no_bit_enable || !('enable_polarity' in port))\n                return val;\n            const mask = port.enable_polarity ? data[portname + 'en'] : data[portname + 'en'].not();\n            return val.and(mask).or(oldval.and(mask.not()));\n        };\n        const do_read = (portname, port) => {\n            do_comb_read(portname, port);\n            for (const [num, wrport] of this.get('wrports').entries()) {\n                const wrportname = 'wr' + num;\n                const mask_ok = (val, num) => typeof val == 'boolean' ? val : val[num];\n                if ('transparent' in port && mask_ok(port.transparent, num) && port_active(wrportname, wrport) && data[portname + 'addr'] == data[wrportname + 'addr'])\n                    out[portname + 'data'] = write_value(wrportname, wrport, out[portname + 'data'], data[wrportname + 'data']);\n                if ('collision' in port && mask_ok(port.collision, num) && port_active(wrportname, wrport) && data[portname + 'addr'] == data[wrportname + 'addr'])\n                    out[portname + 'data'] = write_value(wrportname, wrport, out[portname + 'data'], Vector3vl.xes(bits));\n            }\n\n        };\n        const do_write = (portname, port) => {\n            const addr = this._calcaddr(data[portname + 'addr']);\n            if (valid_addr(addr)) {\n                const oldval = this.memdata.get(addr);\n                const newval = write_value(portname, port, oldval, data[portname + 'data']);\n                const changed = !oldval.eq(newval);\n                this.memdata.set(addr, newval);\n                if (changed)\n                    this.trigger(\"memChange\", addr, newval);\n            }\n        };\n        const do_srst = (portname, port) => {\n            if (data[portname + 'srst'].get(0) == pol(port, 'srst'))\n                out[portname + 'data'] = 'srst_value' in port\n                                       ? Vector3vl.fromBin(port.srst_value, bits)\n                                       : Vector3vl.zeros(bits);\n        };\n        const do_arst = (portname, port) => {\n            if (data[portname + 'arst'].get(0) == pol(port, 'arst'))\n                out[portname + 'data'] = 'arst_value' in port\n                                       ? Vector3vl.fromBin(port.arst_value, bits)\n                                       : Vector3vl.zeros(bits);\n        };\n        const update_last_clk = (portname, port) => {\n            if ('clock_polarity' in port) {\n                const clkname = portname + 'clk';\n                this.last_clk[clkname] = data[clkname].get(0);\n            }\n        };\n        for (const [portname, port] of this._memrdports()) {\n            out[portname + 'data'] = this.get('outputSignals')[portname + 'data'];\n            if ('clock_polarity' in port && is_enabled(portname, port) && port_active(portname, port))\n                do_read(portname, port);\n        }\n        for (const [portname, port] of this._memwrports())\n            if (is_enabled(portname, port) && port_active(portname, port))\n                do_write(portname, port);\n        for (const [portname, port] of this._memrdports())\n            if (!('clock_polarity' in port) && is_enabled(portname, port))\n                do_comb_read(portname, port);\n        for (const [portname, port] of this._memrdports()) {\n            if ('srst_polarity' in port && (is_enabled(portname, port) || !('enable_srst' in port)) && port_active(portname, port))\n                do_srst(portname, port);\n            if ('arst_polarity' in port)\n                do_arst(portname, port);\n        }\n        for (const [portname, port] of this._memrdports())\n            update_last_clk(portname, port);\n        for (const [portname, port] of this._memwrports())\n            update_last_clk(portname, port);\n        return out;\n    },\n    _calcaddr(sig) {\n        if (!sig.isFullyDefined) return -1;\n        return sig.toNumber() - this.get('offset');\n    },\n    * _memrdports() {\n        for (const [num, port] of this.get('rdports').entries())\n            yield [\"rd\" + num, port];\n    },\n    * _memwrports() {\n        for (const [num, port] of this.get('wrports').entries())\n            yield [\"wr\" + num, port];\n    },\n    * _memports() {\n        yield* this._memrdports();\n        yield* this._memwrports();\n    },\n    markup: Box.prototype.markup.concat([{\n            tagName: 'path',\n            className: 'portsplit',\n            selector: 'portsplit'\n        }], Box.prototype.markupZoom),\n    getGateParams() {\n        // hack to get memdata back\n        const params = Box.prototype.getGateParams.apply(this, arguments);\n        params.memdata = this.memdata.toJSON();\n        return params;\n    },\n    _gateParams: Box.prototype._gateParams.concat(['bits', 'abits', 'rdports', 'wrports', 'words', 'offset']),\n    _unsupportedPropChanges: Box.prototype._unsupportedPropChanges.concat(['bits', 'abits', 'rdports', 'wrports', 'words', 'offset']),\n    _operationHelpers: Box.prototype._operationHelpers.concat(['_memrdports', '_memwrports', '_memports', '_calcaddr'])\n});\nexport const MemoryView = BoxView.extend({\n    _autoResizeBox: true,\n    events: {\n        \"click foreignObject.tooltip\": \"stopprop\",\n        \"mousedown foreignObject.tooltip\": \"stopprop\",\n        \"touchstart foreignObject.tooltip\": \"stopprop\", // make sure the input receives focus\n        \"click a.zoom\": \"_displayEditor\"\n    },\n    _displayEditor(evt) {\n        evt.stopPropagation();\n        const model = this.model;\n        const display3vl = model.graph._display3vl;\n        const div = $('<div>', {\n            title: \"Memory contents: \" + model.get('label')\n        }).appendTo('html > body');\n        div.append($(\n            '<div class=\"btn-toolbar\" role=\"toolbar\">' +\n            '<div class=\"btn-group mr-2\" role=\"group\">' +\n            '<button name=\"prev\" type=\"button\" class=\"btn btn-secondary\" title=\"Previous page\">←</button>' +\n            '<button name=\"next\" type=\"button\" class=\"btn btn-secondary\" title=\"Next page\">→</button>' +\n            '</div>' + \n//            '<div class=\"btn-group mr-2\" role=\"group\">' +\n//            '<button type=\"button\" class=\"btn btn-secondary\" title=\"Load contents\">Load</button>' +\n//            '<button type=\"button\" class=\"btn btn-secondary\" title=\"Save contents\">Save</button>' +\n//            '</div>' + \n            '<div class=\"input-group\">' +\n            help.baseSelectMarkupHTML(display3vl, model.get('bits'), 'hex') +\n            '</div>' +\n            '</div>' +\n            '<table class=\"memeditor\">' +\n            '</table>'));\n        const words = model.get('words');\n        const memdata = model.memdata;\n        const ahex = Math.ceil(model.get('abits')/4);\n        const rows = 8;\n        let columns, address = 0;\n        const get_numbase = () => div.find('select[name=base]').val();\n        const getCell = (addr) => {\n            const r = Math.floor((addr - address) / columns);\n            const c = addr - address - r * columns;\n            return div.find('table tr:nth-child('+(r+1)+') td:nth-child('+(c+2)+') input');\n        }\n        const clearMarkings = (sigs) => {\n            for (const [portname, port] of model._memrdports()) {\n                getCell(model._calcaddr(sigs[portname + 'addr'])).removeClass('isread');\n            }\n            for (const [portname, port] of model._memwrports()) {\n                getCell(model._calcaddr(sigs[portname + 'addr'])).removeClass('iswrite');\n            }\n        }\n        const displayMarkings = (sigs) => {\n            for (const [portname, port] of model._memrdports()) {\n                getCell(model._calcaddr(sigs[portname + 'addr'])).addClass('isread');\n            }\n            for (const [portname, port] of model._memwrports()) {\n                getCell(model._calcaddr(sigs[portname + 'addr'])).addClass('iswrite');\n            }\n        }\n        const updateStuff = () => {\n            const numbase = get_numbase();\n            div.find('button[name=prev]').prop('disabled', address <= 0);\n            div.find('button[name=next]').prop('disabled', address + rows * columns >= words);\n            let row = div.find('table tr:first-child');\n            const memdata = model.memdata;\n            for (let r = 0; r < rows; r++, row = row.next()) {\n                if (address + r * columns >= words) break;\n                const addrs = (address + r * columns).toString(16);\n                let col = row.find('td:first-child');\n                col.text('0'.repeat(ahex - addrs.length) + addrs)\n                col = col.next();\n                for (let c = 0; c < columns; c++, col = col.next()) {\n                    if (address + r * columns + c >= words) break;\n                    col.find('input').val(display3vl.show(numbase, memdata.get(address + r * columns + c)))\n                                     .removeClass('invalid');\n                }\n            }\n            displayMarkings(model.get('inputSignals'));\n        };\n        const redraw = () => {\n            const numbase = get_numbase();\n            const ptrn = display3vl.pattern(numbase);\n            const ds = display3vl.size(numbase, model.get('bits')); \n            columns = Math.min(words, 16, Math.ceil(32/ds));\n            address = Math.max(0, Math.min(words - rows * columns, address));\n            const table = div.find('table');\n            table.empty();\n            for (let r = 0; r < rows; r++) {\n                if (address + r * columns >= words) break;\n                const row = $('<tr>');\n                $('<td>').appendTo(row);\n                for (let c = 0; c < columns; c++) {\n                    if (address + r * columns + c >= words) break;\n                    const col = $('<td>');\n                    $('<input type=\"text\">')\n                        .attr('size', ds)\n                        .attr('maxlength', ds)\n                        .attr('pattern', ptrn)\n                        .appendTo(col);\n                    col.appendTo(row);\n                }\n                row.appendTo(table);\n            }\n            updateStuff();\n        };\n        redraw();\n        div.find(\"select[name=base]\").on('change', redraw);\n        div.find(\"button[name=prev]\").on('click', () => {\n            clearMarkings(model.get('inputSignals'));\n            address = Math.max(0, address - rows * columns);\n            updateStuff();\n        });\n        div.find(\"button[name=next]\").on('click', () => {\n            clearMarkings(model.get('inputSignals'));\n            address = Math.min(words - rows * columns, address + rows * columns);\n            updateStuff();\n        });\n        div.on(\"change\", \"input\", (evt) => {\n            const numbase = get_numbase();\n            const target = $(evt.target);\n            const c = target.closest('td').index() - 1;\n            const r = target.closest('tr').index();\n            const addr = address + r * columns + c;\n            const bits = model.get('bits');\n            if (display3vl.validate(numbase, evt.target.value, bits)) {\n                const val = display3vl.read(numbase, evt.target.value, bits);\n                memdata.set(addr, val);\n                model.trigger('manualMemChange', model, addr, val);\n                target.removeClass('invalid');\n            } else {\n                target.addClass('invalid');\n            }\n        });\n        const mem_change_cb = (addr, data) => {\n            if (addr < address || addr > address + rows * columns) return;\n            const numbase = get_numbase();\n            const z = getCell(addr)\n                .val(display3vl.show(numbase, memdata.get(addr)))\n                .removeClass('invalid')\n                .removeClass('flash');\n            setTimeout(() => { z.addClass('flash') }, 10);\n        };\n        const input_change_cb = (gate, sigs) => {\n            clearMarkings(model.previous('inputSignals'));\n            displayMarkings(sigs);\n        };\n        model.on(\"memChange\", mem_change_cb);\n        model.on(\"change:inputSignals\", input_change_cb);\n        this.paper.trigger('open:memorycontent', div, () => {\n            div.remove();\n            model.off(\"memChange\", mem_change_cb);\n            model.off(\"change:inputSignals\", input_change_cb);\n        });\n        return false;\n    }\n});\n\n","\"use strict\";\n\nimport { Vector3vl, Display3vlWithRegex, Display3vl } from '3vl';\n\nconst controlCodes20 = [\n    'NUL', 'SOH', 'STX', 'ETX', 'EOT', 'ENQ', 'ACK', 'BEL', \n    'BS',  'HT',  'LF',  'VT',  'FF',  'CR',  'SO',  'SI', \n    'DLE', 'DC1', 'DC2', 'DC3', 'DC4', 'NAK', 'SYN', 'ETB',\n    'CAN', 'EM',  'SUB', 'ESC', 'FS',  'GS',  'RS',  'US',\n    'SP',  'DEL'];\n\nexport class Display3vlASCII extends Display3vlWithRegex {\n    constructor() {\n        super('[\\x20-\\x7e\\xa0-\\xff\\ufffd\\u2400-\\u2421]|' + controlCodes20.join('|'))\n    }\n    get name() {\n        return \"ascii\";\n    }\n    get sort() {\n        return 1;\n    }\n    can(kind, bits) {\n        return bits == 7 || bits == 8;\n    }\n    read(data, bits) {\n        if (data.length == 1) {\n            const code = data.charCodeAt(0);\n            if (code == 0xfffd) return Vector3vl.xes(bits);\n            if (code == 0x2421) return Vector3vl.fromHex(\"7f\", bits);\n            if (code >= 0x2400 && code <= 0x2420) \n                return Vector3vl.fromHex((code - 0x2400).toString(16), bits);\n            return Vector3vl.fromHex(code.toString(16), bits);\n        } else {\n            const code = controlCodes20.indexOf(data);\n            if (code < 0) return Vector3vl.xes(bits);\n            if (code == 0x21) return Vector3vl.fromHex(\"7f\", bits);\n            return Vector3vl.fromHex(code.toString(16), bits);\n        }\n    }\n    show(data) {\n        if (!data.isFullyDefined) return \"\\ufffd\";\n        const code = parseInt(data.toHex(), 16);\n        if (code <= 0x20) {\n            return String.fromCharCode(0x2400 + code);\n        }\n        if (code == 0x7f) return \"\\u2421\";\n        if (code > 0x7f && code < 0xa0) {\n            return \"\\ufffd\";\n        }\n        return String.fromCharCode(code);\n    }\n    size(bits) {\n        return 1;\n    }\n}\n\n        \nexport function baseSelectMarkupHTML(display3vl, bits, base) { \n    const markup = display3vl.usableDisplays('read', bits)\n        .map(n => '<option value=\"' + n + '\"' + (n == base ? ' selected=\"selected\"' : '') +'>' + n + '</option>');\n    return '<select name=\"base\">' + markup.join(\"\") + '</select>';\n};\n\nexport function eqSigs(sigs1, sigs2) {\n    for (const k in sigs2) {\n        if (!sigs1[k].eq(sigs2[k])) return false;\n    }\n    return true;\n};\n\n","\"use strict\";\n\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport * as joint from 'jointjs';\nimport { Box, BoxView } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl, Mem3vl } from '3vl';\nimport dagre from 'dagre';\nimport graphlib from 'graphlib';\n\nexport const FSM = Box.define('FSM', {\n    /* default properties */\n    bits: { in: 1, out: 1},\n    polarity: { clock: true },\n    init_state: 0,\n    states: 1,\n    trans_table: [],\n    \n    size: { width: 80, height: 3*16+8 },\n    ports: {\n        groups: {\n            'in': {\n                position: Box.prototype._getStackedPosition({ side: 'left' })\n            },\n            'out': {\n                position: Box.prototype._getStackedPosition({ side: 'right' })\n            }\n        }\n    }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        const polarity = this.get('polarity');\n        \n        const init_state = this.get('init_state');\n        const states = this.get('states');\n        const trans_table = this.get('trans_table');\n        \n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits.in, labelled: true },\n            { id: 'clk', group: 'in', dir: 'in', bits: 1, polarity: polarity.clock, decor: Box.prototype.decorClock, labelled: true },\n            { id: 'arst', group: 'in', dir: 'in', bits: 1, polarity: polarity.arst, labelled: true },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.out, labelled: true }\n        ];\n        \n        Box.prototype.initialize.apply(this, arguments);\n        \n        const current_state = this.get('current_state');\n        \n        this.fsmgraph = new joint.dia.Graph;\n        const statenodes = [];\n        for (let n = 0; n < states; n++) {\n            const node = new joint.shapes.standard.Circle({stateNo: n, id: 'state' + n, isInit: n == init_state});\n            node.attr('label/text', String(n));\n            node.resize(100,50);\n            if (n == init_state)\n                node.attr('body/strokeWidth', 3)\n            if (n == current_state)\n                node.attr('body/class', 'current_state');\n            node.addTo(this.fsmgraph);\n            statenodes.push(node);\n        }\n        for (const [stateIn, trs] of this.transitions) {\n            for (const tr of trs) {\n                const trans = new joint.shapes.standard.Link({\n                    id: tr.id, \n                    ctrlIn: tr.ctrlIn,\n                    ctrlOut: tr.ctrlOut\n                });\n                trans.appendLabel({\n                    attrs: {\n                        text: {\n                            text: trans.get('ctrlIn').toBin() + '/' + trans.get('ctrlOut').toBin()\n                        }\n                    }\n                });\n                trans.source({ id: 'state' + stateIn });\n                trans.target({ id: 'state' + tr.stateOut });\n                trans.addTo(this.fsmgraph);\n            }\n        }\n        \n        this.listenTo(this, 'change:current_state', (model, state) => {\n            const pstate = model.previous('current_state');\n            this.fsmgraph.getCell('state' + pstate).removeAttr('body/class');\n            this.fsmgraph.getCell('state' + state).attr('body/class', 'current_state');\n        });\n        this.listenTo(this, 'change:next_trans', (model, id) => {\n            const pid = model.previous('next_trans');\n            if (pid) {\n                const cell = this.fsmgraph.getCell(pid);\n                cell.removeAttr('line/class');\n                cell.removeAttr('line/targetMarker/class');\n            }\n            if (id) {\n                this.fsmgraph.getCell(id).attr({\n                    line: {\n                        class: 'next_trans',\n                        targetMarker: {\n                            class: 'next_trans'\n                        }\n                    }\n                });\n            }\n        });\n    },\n    prepare() {\n        const bits = this.get('bits');\n        this.transitions = new Map();\n        var id = 0;\n        for (const tr of this.get('trans_table')) {\n            if (!this.transitions.has(tr.state_in))\n                this.transitions.set(tr.state_in, []);\n            this.transitions.get(tr.state_in).push({\n                id: 'tr'+id,\n                stateOut: tr.state_out,\n                ctrlIn: Vector3vl.fromBin(tr.ctrl_in, bits.in),\n                ctrlOut: Vector3vl.fromBin(tr.ctrl_out, bits.out)\n            });\n            id++;\n        };\n        var current_state = this.get('current_state');\n        if (current_state === undefined) {\n            current_state = this.get('init_state');\n            this.set('current_state', current_state);\n        }\n        this.last_clk = 0;\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        const polarity = this.get('polarity');\n        const next_trans = () => {\n            const links = this.transitions.get(this.get('current_state')) || [];\n            for (const trans of links) {\n                const ctrlIn = trans.ctrlIn;\n                const xmask = ctrlIn.xmask();\n                if (data.in.or(xmask).eq(ctrlIn.or(xmask)))\n                    return trans;\n            }\n        };\n        const next_output = () => {\n            const links = this.transitions.get(this.get('current_state')) || [];\n            const ixmask = data.in.xmask();\n            const results = [];\n            for (const trans of links) {\n                const ctrlIn = trans.ctrlIn;\n                const xmask = ctrlIn.xmask().or(ixmask);\n                if (data.in.or(xmask).eq(ctrlIn.or(xmask)))\n                    results.push(trans.ctrlOut);\n            }\n            const xes = Vector3vl.xes(bits.out);\n            if (results.length == 0) return xes;\n            while (results.length > 1) {\n                const other = results.pop();\n                const eqs = results[0].xnor(other).or(xes);\n                results[0] = results[0].and(eqs).or(xes.and(eqs.xmask()));\n            };\n            return results[0];\n        };\n        const pol = what => polarity[what] ? 1 : -1;\n        if (data.arst.get(0) == pol('arst')) {\n            this.set('current_state', this.get('init_state'));\n        } else {\n            const last_clk = this.last_clk;\n            if (data.clk.get(0) == pol('clock') && last_clk == -pol('clock')) {\n                const trans = next_trans();\n                this.set('current_state',\n                    trans ? trans.stateOut : this.get('init_state'));\n            }\n        }\n        this.last_clk = data.clk.get(0);\n        const trans = next_trans();\n        if (!trans) {\n            this.set('next_trans', undefined);\n        } else {\n            this.set('next_trans', trans.id);\n        }\n        return { out: next_output() };\n    },\n    markup: Box.prototype.markup.concat(Box.prototype.markupZoom),\n    _gateParams: Box.prototype._gateParams.concat(['bits', 'polarity', 'states', 'init_state', 'trans_table']),\n    _unsupportedPropChanges: Box.prototype._unsupportedPropChanges.concat(['bits', 'polarity', 'states', 'init_state', 'trans_table']),\n    _presentationParams: Box.prototype._presentationParams.concat(['current_state', 'next_trans'])\n});\n\nexport const FSMView = BoxView.extend({\n    _autoResizeBox: true,\n    events: {\n        \"click foreignObject.tooltip\": \"stopprop\",\n        \"mousedown foreignObject.tooltip\": \"stopprop\",\n        \"touchstart foreignObject.tooltip\": \"stopprop\", // make sure the input receives focus\n        \"click a.zoom\": \"_displayEditor\"\n    },\n    _displayEditor(evt) {\n        evt.stopPropagation();\n        const div = $('<div>', {\n            title: \"FSM: \" + this.model.get('label')\n        }).appendTo('html > body');\n        const pdiv = $('<div>').appendTo(div);\n        const graph = this.model.fsmgraph;\n        const paper = new joint.dia.Paper({\n            el: pdiv,\n            model: graph\n        });\n        // to visualize the cells\n        graph.resetCells(graph.getCells());\n        // lazy layout\n        if (!graph.get('laid_out')) {\n            joint.layout.DirectedGraph.layout(graph, {\n                dagre: dagre,\n                graphlib: graphlib\n            });\n            graph.set('laid_out', true);\n        }\n        // auto-resizing\n        paper.listenTo(graph, 'change:position', (elem) => {\n            paper.fitToContent({ padding: 30, allowNewOrigin: 'any' });\n        });\n        paper.fitToContent({ padding: 30, allowNewOrigin: 'any' });\n        this.paper.trigger('open:fsm', div, () => {\n            paper.remove();\n            div.remove();\n        });\n        return false;\n    }\n});\n\n","import { IO, IOView, NumBase } from './io.mjs';\nimport { BoxView } from './base.mjs';\n\nconst highColor = '#03c03c';\nconst lowColor = '#3c3c3c';\n\n/*\n * This is a standard 7-segment display element.\n * It is designed to take an 8-bit number as an input.\n *\n * The most significant bit determines the decimal point state (dp).\n * The following bits determine states of respectively: a,b,c,d,e,f,g\n * segments of the display. (g is determined by the least significant bit).\n *\n * The placement of single segments of the display can be checked\n * on the wikipedia page here:\n * https://en.wikipedia.org/wiki/Seven-segment_display#/media/File:7_Segment_Display_with_Labeled_Segments.svg\n */\nexport const Display7 = IO.define('Display7',\n{\n  bits: 8,\n  size: { width: 76.5, height: 110 },\n  attrs: {\n    LEDs: {\n      fill: lowColor,\n      transform: 'translate(1,1),scale(6)'\n    },\n    a: {\n      points: '1, 1  2, 0  8, 0  9, 1  8, 2  2, 2'\n    },\n    b: {\n      points: '9, 1 10, 2 10, 8  9, 9  8, 8  8, 2'\n    },\n    c: {\n      points: '9, 9 10,10 10,16  9,17  8,16  8,10'\n    },\n    d: {\n      points: '9,17  8,18  2,18  1,17  2,16  8,16'\n    },\n    e: {\n      points: '1,17  0,16  0,10  1, 9  2,10  2,16'\n    },\n    f: {\n      points: '1, 9  0, 8  0, 2  1, 1  2, 2  2, 8'\n    },\n    g: {\n      points: '1, 9  2, 8  8, 8  9, 9  8,10  2,10'\n    },\n    dp: {\n      cx: '11.3',\n      cy: '16.9',\n      r: '1.1'\n    },\n    body: {\n      height: 'calc(h)',\n      width: 'calc(w)',\n      stroke: '#222222',\n      fill: '#333333',\n    }\n  }\n}, {\n  isOutput: true,\n  _portDirection: 'in',\n  bits: 8,\n\n  getOutput() {\n    return this.get('inputSignals').in;\n  },\n  markupBus: NumBase.prototype.markup.concat([\n    {\n      tagName: 'rect',\n      selector: 'display'\n    },\n    {\n      tagName: 'polygon',\n      selector: 'a',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'polygon',\n      selector: 'b',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'polygon',\n      selector: 'c',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'polygon',\n      selector: 'd',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'polygon',\n      selector: 'e',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'polygon',\n      selector: 'f',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'polygon',\n      selector: 'g',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'circle',\n      selector: 'dp',\n      groupSelector: 'LEDs'\n    }]),\n});\n\nexport const Display7View = IOView.extend({\n  _autoResizeBox: false,\n\n  confirmUpdate(flags) {\n    BoxView.prototype.confirmUpdate.apply(this, arguments);\n    this._updateDisplay();\n  },\n  _updateDisplay() {\n    const inputSignal = this.model.getOutput();\n    const newAttrs = {\n      dp: { fill: inputSignal.get(7) === 1 ? highColor : lowColor },\n      a: { fill: inputSignal.get(6) === 1 ? highColor : lowColor },\n      b: { fill: inputSignal.get(5) === 1 ? highColor : lowColor },\n      c: { fill: inputSignal.get(4) === 1 ? highColor : lowColor },\n      d: { fill: inputSignal.get(3) === 1 ? highColor : lowColor },\n      e: { fill: inputSignal.get(2) === 1 ? highColor : lowColor },\n      f: { fill: inputSignal.get(1) === 1 ? highColor : lowColor },\n      g: { fill: inputSignal.get(0) === 1 ? highColor : lowColor },\n    };\n    this._applyAttrs(newAttrs);\n  },\n});\n","\nimport * as cells from '../cells.mjs';\nimport FastPriorityQueue from 'fastpriorityqueue';\nimport { Vector3vl } from '3vl';\n\nconst specialGates = new Set(['Subcircuit', 'Input', 'Output', 'Button', 'Lamp', 'NumEntry', 'NumDisplay']);\n\nclass Link {\n    constructor(source, target) {\n        this.source = source;\n        this.target = target;\n    }\n}\n\nclass Gate {\n    constructor(id, graph, gateParams, ports, inputSignals, outputSignals) {\n        this.id = id;\n        this.graph = graph;\n        this.special = specialGates.has(gateParams.type);\n        this.isSubcircuit = gateParams.type == 'Subcircuit';\n        this.isOutput = gateParams.type == 'Output';\n        const cell = cells[gateParams.type].prototype;\n        this.operation = cell.operation;\n        for (const helper of cell._operationHelpers)\n            this[helper] = cell[helper];\n        this.links = new Set();\n        this._links_to = Object.create(null);\n        this._params = gateParams;\n        this._params.inputSignals = Object.create(null);\n        this._params.outputSignals = Object.create(null);\n        this._presentationParams = cell._presentationParams;\n        this._presentationParamChanged = Object.create(null);\n        this._monitors = Object.create(null);\n        this._ports = Object.create(null);\n        for (const port of ports) {\n            this._ports[port.id] = port;\n            this._monitors[port.id] = new Set();\n            if (port.dir == \"in\")\n                this._params.inputSignals[port.id] = Vector3vl.fromClonable(inputSignals[port.id]);\n            if (port.dir == \"out\") {\n                this._params.outputSignals[port.id] = Vector3vl.fromClonable(outputSignals[port.id]);\n                this._links_to[port.id] = new Set();\n            }\n        }\n        cell.prepare.call(this);\n    }\n    get(name) {\n        return this._params[name];\n    }\n    set(name, value) {\n        this._params[name] = value;\n        if (this._presentationParams.includes(name)) {\n            worker._markPresentationParam(this, name);\n        }\n    }\n    addLinkTo(port, target) {\n        this._links_to[port].add(target);\n    }\n    removeLinkTo(port, target) {\n        this._links_to[port].delete(target);\n    }\n    addLink(linkId) {\n        this.links.add(linkId);\n    }\n    removeLink(linkId) {\n        this.links.delete(linkId);\n    }\n    targets(port) {\n        return this._links_to[port];\n    }\n    getPort(port) {\n        return this._ports[port];\n    }\n    getPorts() {\n        return Object.values(this._ports);\n    }\n    trigger(event, ...args) {\n        postMessage({ type: 'gateTrigger', args: [this.graph.id, this.id, event, args] });\n    }\n    monitor(port, monitorId) {\n        this._monitors[port].add(monitorId);\n    }\n    unmonitor(port, monitorId) {\n        this._monitors[port].delete(Number(monitorId));\n    }\n    getMonitors(port) {\n        return this._monitors[port];\n    }\n}\n\nclass Graph {\n    constructor(id) {\n        this.id = id;\n        this._gates = {};\n        this._links = {};\n        this._observed = false;\n        this._subcircuit = null;\n    }\n    addLink(linkId, source, target) {\n        this._links[linkId] = new Link(source, target);\n        this._gates[source.id].addLinkTo(source.port, target);\n        this._gates[source.id].addLink(linkId);\n        this._gates[target.id].addLink(linkId);\n    }\n    addGate(gateId, gateParams, ports, inputSignals, outputSignals) {\n        this._gates[gateId] = new Gate(gateId, this, gateParams, ports, inputSignals, outputSignals);\n    }\n    removeLink(linkId) {\n        const link = this._links[linkId];\n        this._gates[link.source.id].removeLinkTo(link.source.port, link.target);\n        this._gates[link.source.id].removeLink(linkId);\n        this._gates[link.target.id].removeLink(linkId);\n        delete this._links[linkId];\n    }\n    removeGate(gateId) {\n        for (const linkId of this._gates[gateId].links)\n            this.removeLink(linkId);\n        this._gates[gateId].graph = null;\n        delete this._gates[gateId];\n    }\n    getGate(gateId) {\n        return this._gates[gateId];\n    }\n    getLink(linkId) {\n        return this._links[linkId];\n    }\n    getGates() {\n        return Object.values(this._gates);\n    }\n    observe() {\n        this._observed = true;\n    }\n    unobserve() {\n        this._observed = false;\n    }\n    get observed() {\n        return this._observed;\n    }\n    setSubcircuit(gate) {\n        this._subcircuit = gate;\n    }\n    get subcircuit() {\n        return this._subcircuit;\n    }\n}\n\nclass WorkerEngineWorker {\n    constructor() {\n        this._interval = 10;\n        this._graphs = Object.create(null);\n        this._monitors = Object.create(null);\n        this._monitorChecks = Object.create(null);\n        this._alarms = Object.create(null);\n        this._alarmQueue = new Map();\n        this._queue = new Map();\n        this._pq = new FastPriorityQueue();\n        this._toUpdate = new Map();\n        this._toUpdateParam = new Map();\n        this._tick = 0;\n        this._sender = setInterval(() => {\n            this._sendUpdates();\n        }, 25);\n        this._updater = null;\n    }\n    interval(ms) {\n        this._interval = ms;\n    }\n    updateGates(reqid, sendUpdates) {\n        const count = this._updateGates();\n        if (sendUpdates) this._sendUpdates();\n        this._postMonitors();\n        this._sendAck(reqid, count);\n    }\n    _updateGates() {\n        if (this._pq.peek() == this._tick) return this._updateGatesNext();\n        else {\n            const k = this._tick | 0;\n            this._tick = (k + 1) | 0;\n            return 0;\n        }\n    }\n    updateGatesNext(reqid, sendUpdates) {\n        const count = this._updateGatesNext();\n        if (sendUpdates) this._sendUpdates();\n        this._postMonitors();\n        this._sendAck(reqid, count);\n    }\n    _updateGatesNext() {\n        const k = this._pq.poll() | 0;\n        console.assert(k >= this._tick);\n        this._tick = k;\n        const q = this._queue.get(k);\n        let count = 0;\n        while (q.size) {\n            const [gate, args] = q.entries().next().value;\n            q.delete(gate);\n            if (gate.special) continue;\n            const graph = gate.graph;\n            if (!graph) continue;\n            const newOutputs = gate.operation(args);\n            if ('_clock_hack' in newOutputs) {\n                delete newOutputs['_clock_hack'];\n                this._enqueue(gate);\n            }\n            this._setGateOutputSignals(gate, newOutputs);\n            count++;\n        }\n        this._queue.delete(k);\n        this._tick = (k + 1) | 0;\n        return count;\n    }\n    ping(reqid, sendUpdates) {\n        if (sendUpdates) this._sendUpdates();\n        this._sendAck(reqid);\n    }\n    start() {\n        this._stop();\n        this._updater = setInterval(() => {\n            this._updateGates();\n            this._postMonitors();\n        }, this._interval);\n    }\n    startFast() {\n        this._stop();\n        this._updater = setInterval(() => {\n            const startTime = Date.now();\n            while (Date.now() - startTime < 10 && this._hasPendingEvents() && this._updater) {\n                this._updateGatesNext();\n                this._postMonitors();\n            }\n        }, 10);\n    }\n    stop(reqid, sendUpdates) {\n        this._stop();\n        if (sendUpdates) this._sendUpdates();\n        this._sendAck(reqid);\n    }\n    _stop() {\n        if (this._updater) {\n            clearInterval(this._updater);\n            this._updater = null;\n        }\n    }\n    addGraph(graphId) {\n        console.assert(!(graphId in this._graphs));\n        this._graphs[graphId] = new Graph(graphId);\n    }\n    addLink(graphId, linkId, source, target) {\n        const graph = this._graphs[graphId];\n        graph.addLink(linkId, source, target);\n        const sourceGate = graph.getGate(source.id);\n        const targetGate = graph.getGate(target.id);\n        const sig = sourceGate.get('outputSignals')[source.port];\n        this._setGateInputSignal(targetGate, target.port, sig);\n    }\n    addGate(graphId, gateId, gateParams, ports, inputSignals, outputSignals) {\n        const graph = this._graphs[graphId];\n        graph.addGate(gateId, gateParams, ports, inputSignals, outputSignals);\n        this._enqueue(graph.getGate(gateId));\n    }\n    addSubcircuit(graphId, gateId, subgraphId, IOmap) {\n        const graph = this._graphs[graphId];\n        const gate = graph.getGate(gateId);\n        const subgraph = this._graphs[subgraphId];\n        gate.set('subgraph', subgraph);\n        gate.set('circuitIOmap', IOmap);\n        subgraph.setSubcircuit(gate);\n        for (const [port, ioId] of Object.entries(IOmap)) {\n            const io = subgraph.getGate(ioId);\n            if (gate.getPort(port).dir == 'in') {\n                this._setGateOutputSignal(io, 'out', gate.get('inputSignals')[port]);\n            }\n            if (gate.getPort(port).dir == 'out') {\n                this._setGateOutputSignal(gate, port, io.get('inputSignals').in);\n            }\n        }\n    }\n    removeLink(graphId, linkId) {\n        const graph = this._graphs[graphId];\n        const link = graph.getLink(linkId);\n        graph.removeLink(linkId);\n        const targetGate = graph.getGate(link.target.id);\n        const sig = Vector3vl.xes(targetGate.getPort(link.target.port).bits);\n        this._setGateInputSignal(targetGate, link.target.port, sig);\n    }\n    removeGate(graphId, gateId) {\n        this._graphs[graphId].removeGate(gateId);\n    }\n    observeGraph(graphId) {\n        const graph = this._graphs[graphId];\n        graph.observe();\n        for (const gate of graph.getGates())\n            for (const port of gate.getPorts())\n                if (port.dir == 'out')\n                    this._markUpdate(gate, port.id);\n    }\n    unobserveGraph(graphId) {\n        this._graphs[graphId].unobserve();\n    }\n    changeInput(graphId, gateId, sig) {\n        const gate = this._graphs[graphId].getGate(gateId);\n        this._setGateOutputSignals(gate, { out: Vector3vl.fromClonable(sig) });\n    }\n    changeParam(graphId, gateId, paramName, val) {\n        const gate = this._graphs[graphId].getGate(gateId);\n        gate.set(paramName, val);\n    }\n    manualMemChange(graphId, gateId, addr, data) {\n        const gate = this._graphs[graphId].getGate(gateId);\n        gate.memdata.set(addr, Vector3vl.fromClonable(data));\n        this._enqueue(gate);\n    }\n    monitor(graphId, gateId, port, monitorId, {triggerValues, stopOnTrigger, oneShot, synchronous }) {\n        if (triggerValues != undefined)\n            for (const k of triggerValues.keys())\n                triggerValues[k] = Vector3vl.fromClonable(triggerValues[k]);\n        const gate = this._graphs[graphId].getGate(gateId);\n        this._monitors[monitorId] = { gate, port, triggerValues, stopOnTrigger, oneShot, synchronous };\n        gate.monitor(port, monitorId);\n        if (triggerValues == undefined)\n            postMessage({ type: 'monitorValue', args: [monitorId, this._tick, gate.get('outputSignals')[port]] });\n    }\n    unmonitor(monitorId) {\n        const monitor = this._monitors[monitorId];\n        if (monitor == undefined) return;\n        monitor.gate.unmonitor(monitor.port, monitorId);\n        delete this._monitors[monitorId];\n        delete this._monitorChecks[monitorId];\n    }\n    alarm(tick, alarmId, {stopOnAlarm, synchronous}) {\n        if (tick <= this._tick) return;\n        this._alarms[alarmId] = { tick, stopOnAlarm, synchronous };\n        if (!this._alarmQueue.has(tick))\n            this._alarmQueue.set(tick, new Set());\n        this._alarmQueue.get(tick).add(alarmId);\n        this._pq.add(tick-1);\n        if (!this._queue.has(tick-1))\n            this._queue.set(tick-1, new Map());\n    }\n    unalarm(alarmId) {\n        const alarm = this._alarms[alarmId];\n        if (alarm == undefined) return;\n        const tick = alarm.tick;\n        this._alarmQueue.get(tick).delete(alarmId);\n        if (this._alarmQueue.get(tick).size == 0)\n            this._alarmQueue.delete(tick);\n        delete this._alarms[alarmId];\n    }\n    _enqueue(gate) {\n        const k = (this._tick + gate.get('propagation')) | 0;\n        const sq = (() => {\n            const q = this._queue.get(k);\n            if (q !== undefined) return q;\n            const q1 = new Map();\n            this._queue.set(k, q1);\n            this._pq.add(k);\n            return q1;\n        })();\n        sq.set(gate, Object.assign({}, gate.get('inputSignals')));\n    }\n    _postMonitors() {\n        for (const [monitorId, sig] of Object.entries(this._monitorChecks)) {\n            const {triggerValues, stopOnTrigger, oneShot, synchronous} = this._monitors[monitorId];\n            let triggered = true;\n            if (triggerValues)\n                triggered = triggerValues.some((triggerValue) => sig.eq(triggerValue));\n            if (triggered) {\n                if (oneShot) this.unmonitor(monitorId);\n                if (synchronous) this._sendUpdates();\n                postMessage({ type: 'monitorValue', args: [monitorId, this._tick, sig, stopOnTrigger, oneShot] });\n                if (stopOnTrigger) this._stop();\n            }\n        }\n        this._monitorChecks = Object.create(null);\n        if (this._alarmQueue.get(this._tick)) {\n            for (const alarmId of this._alarmQueue.get(this._tick)) {\n                const { stopOnAlarm, synchronous } = this._alarms[alarmId];\n                if (synchronous) this._sendUpdates();\n                delete this._alarms[alarmId];\n                postMessage({ type: 'alarmReached', args: [alarmId, this._tick, stopOnAlarm] });\n                if (stopOnAlarm) this._stop();\n            }\n            this._alarmQueue.delete(this._tick);\n        }\n    }\n    _setGateOutputSignals(gate, newOutputs) {\n        for (const [port, sig] of Object.entries(newOutputs)) {\n            this._setGateOutputSignal(gate, port, sig);\n        }\n    }\n    _setGateOutputSignal(gate, port, sig) {\n        const outputs = gate.get('outputSignals');\n        const oldOutput = outputs[port];\n        if (sig.eq(oldOutput)) return;\n        outputs[port] = sig;\n        this._markUpdate(gate, port);\n        for (const target of gate.targets(port)) {\n            const targetGate = gate.graph.getGate(target.id);\n            this._setGateInputSignal(targetGate, target.port, sig);\n        }\n        const monitors = gate.getMonitors(port);\n        for (const monitorId of monitors)\n            this._monitorChecks[monitorId] = sig;\n    }\n    _setGateInputSignal(targetGate, port, sig) {\n        const inputs = targetGate.get('inputSignals');\n        const oldInput = inputs[port];\n        if (sig.eq(oldInput)) return;\n        inputs[port] = sig;\n        if (targetGate.isSubcircuit) {\n            const subgraph = targetGate.get('subgraph');\n            if (!subgraph) return;\n            const iomap = targetGate.get('circuitIOmap');\n            const gate = subgraph.getGate(iomap[port]);\n            if (!gate) return;\n            this._setGateOutputSignals(gate, { out: sig });\n        } else if (targetGate.isOutput) {\n            const subcir = targetGate.graph.subcircuit;\n            if (!subcir) return;\n            const subcirPort = targetGate.get('net');\n            this._setGateOutputSignal(subcir, subcirPort, sig);\n        } else {\n            this._enqueue(targetGate);\n        }\n    }\n    _markUpdate(gate, port) {\n        if (!gate.graph.observed) return;\n        const s = (() => {\n            const v = this._toUpdate.get(gate);\n            if (v !== undefined) return v;\n            const r = new Set();\n            this._toUpdate.set(gate, r);\n            return r;\n        })();\n        s.add(port);\n    }\n    _markPresentationParam(gate, param) {\n        if (!gate.graph.observed) return;\n        const s = (() => {\n            const v = this._toUpdateParam.get(gate);\n            if (v !== undefined) return v;\n            const r = new Set();\n            this._toUpdateParam.set(gate, r);\n            return r;\n        })();\n        s.add(param);\n    }\n    _sendUpdates() {\n        const updates = [];\n        for (const [gate, ports] of this._toUpdate) {\n            const outputSignals = gate.get('outputSignals');\n            const outputs = {};\n            for (const port of ports)\n                outputs[port] = outputSignals[port];\n            updates.push([gate.graph.id, gate.id, outputs]);\n        }\n        this._toUpdate = new Map();\n        const pendingEvents = this._hasPendingEvents();\n        postMessage({ type: 'update', args: [this._tick, pendingEvents, updates] });\n        if (this._toUpdateParam.size > 0) {\n            for (const [gate, params] of this._toUpdateParam) {\n                for (const param of params)\n                    postMessage({ type: 'gateSet', args: [gate.graph.id, gate.id, param, gate.get(param) ] });\n            }\n            this._toUpdateParam = new Map();\n        }\n    }\n    _sendAck(reqid, response) {\n        postMessage({ type: 'ack', args: [reqid, response] });\n    }\n    _hasPendingEvents() {\n        return this._queue.size > 0;\n    }\n};\n\nconst worker = new WorkerEngineWorker();\n\nself.onmessage = (e) => {\n    const msg = e.data;\n    if ('arg' in msg)\n        worker[msg.type](msg.arg);\n    else if ('args' in msg)\n        worker[msg.type].apply(worker, msg.args);\n    else\n        worker[msg.type]();\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [357], () => (__webpack_require__(15863)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".main.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t863: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = this[\"webpackChunkdigitaljs\"] = this[\"webpackChunkdigitaljs\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["root","factory","exports","module","define","amd","this","deferred","next","circleArrowhead","tagName","attributes","CircleSourceArrowhead","CircleTargetArrowhead","DoublyButton","update","relatedView","isShortWire","options","distance","distanceShort","secondary","hide","distanceLong","arguments","RemoveButton","extend","name","children","MonitorButton","selector","action","evt","notify","portGroupAttrs","wire","stroke","x1","y1","x2","undefined","y2","port","magnet","r","fill","strokeWidth","strokeOpacity","bits","ref","fontSize","iolabel","textVerticalAnchor","decor","Gate","propagation","label","size","width","height","inputSignals","outputSignals","attrs","body","refX","refDy","textAnchor","ports","groups","position","refDx","refY","z","operation","initialize","get","items","_preprocessPorts","prepare","bindAttrToProp","_unsupportedPropChanges","length","on","map","prop","join","__","___","opt","init","changed","Object","keys","forEach","attr","set","previous","console","warn","_","val","_changeOutputSignals","sigs","graph","getConnectedLinks","outbound","groupBy","wires","value","_setInput","sig","signals","_clearInput","getPort","Vector3vl","_resetPortsSignals","text","_getBitsText","labelled","portlabel","id","polarity","assert","group","d","_setPortsBits","portsBits","portsReset","portid","find","push","filter","_changeSource","inbound","_changeTarget","_resetPortValue","in","out","dir","_removePortsSignals","addPort","addPorts","removePort","removePorts","_getStackedPosition","portsArgs","elBBox","side","step","offset","x","topLeft","topRight","y","bottomRight","portArgs","index","idxOffset","getLayoutSize","setLayoutPosition","portMarkup","className","markup","getGateParams","layout","_gateParams","concat","_gateLayoutParams","_operationHelpers","_presentationParams","GateView","signal","high","low","def","undef","presentationAttributes","stopprop","stopPropagation","confirmUpdate","flags","hasFlag","_updatePortSignals","model","isDefined","isHigh","isLow","_applyPortAttrs","_applyAttrs","node","selectors","setNodeAttributes","_portElementsCache","portSelectors","_updatePorts","Wire","line","class","targetMarker","wrapper","warning","has","onAdd","_was_added","remove","tar","target","getCell","_propagateSignal","getTargetElement","_changeSignal","src","source","getSourceElement","_checkConnection","hasChanged","preTar","preTarget","silent","getWireParams","connector","from","to","vertices","getWirePath","hier","sc","reverse","WireView","initFlag","longWireLength","bus","single","none","_wireToolsView","window","tools","focusOpacity","prevModels","_updateSignal","_updateBits","_updateWarning","getConnectionLength","onRemove","_removeTooltip","mouseenter","addTools","_addTooltip","clientX","clientY","mouseleave","removeTools","pos","wire_hover","css","appendTo","document","_generateTextForTooltip","listenTo","stopListening","display3vl","_display3vl","hovertext","show","html","onEndModelChange","endType","endModel","Box","refWidth","refHeight","tooltip","prototype","apply","tooltipMinWidth","trigger","markupZoom","namespaceURI","textContent","style","cursor","decorClock","l","BoxView","_autoResizeBox","render","_calculateBoxWidth","leftlabels","Array","el","querySelectorAll","rightlabels","leftwidth","Math","max","getBBox","rightwidth","fixup","NumBase","numbase","usableDisplays","numbaseType","includes","markupTooltip","NumBaseView","addPresentationAttributes","events","_changeNumbase","testtext","createElementNS","$el","_makeNumBaseSelector","_updateNumBaseSelector","$","empty","base","IO","net","mode","ioname","fontWeight","_portDirection","b","_checkMode","withinSubcircuit","markupInSubcircuit","markupSingle","markupBus","subcir","portsBitsSubcir","IOView","getAttribute","call","Input","btnface","xAlignment","yAlignment","isInput","setInput","toggleInput","not","Error","type","InputView","button","_updateView","_updateButton","_updateNumEntry","removeClass","_onButton","_onNumEntry","validate","read","addClass","Button","ButtonView","NumEntry","NumEntryView","Output","led","refR","isOutput","getOutput","OutputView","lamp","_updateLamp","_updateNumDisplay","Lamp","LampView","NumDisplay","NumDisplayView","Constant","constant","ConstantView","constantCache","_showText","Clock","_clock_hack","min","ClockView","args","updatePropagation","_changePropagation","valid","String","Number","toggleClass","and_path","or_path","buf_path","xor_arc_path_markup","neg_markup","gateMarkup","GateSVG","dx","Gate11","GateX1","inputs","gate","xor_arc","neg_bubble","i","scaling","param","data","ret","in1","binoperation","finoperation","GateReduce","Repeater","RepeaterView","Not","NotView","Or","in2","or","OrView","And","and","AndView","Nor","NorView","Nand","NandView","Xor","xor","XorView","Xnor","XnorView","OrReduce","reduceOr","OrReduceView","NorReduce","reduceNor","NorReduceView","AndReduce","reduceAnd","AndReduceView","NandReduce","reduceNand","NandReduceView","XorReduce","reduceXor","XorReduceView","XnorReduce","reduceXnor","XnorReduceView","isSafeInteger","v","MAX_SAFE_INTEGER","Arith","refCx","refCy","oper","Arith11","signed","isFullyDefined","arithop","toBigInt","Arith21","sgn","shiftHelp","am","bits_in","bits_out","sgn_in","sgn_out","fillx","signbit","ext","my_in","slice","Shift","toNumber","shiftdir","BaseCompare","Compare","arithcomp","EqCompare","msb","bincomp","Negation","NegationView","UnaryPlus","UnaryPlusView","Addition","j","AdditionView","Subtraction","SubtractionView","Multiplication","MultiplicationView","Division","DivisionView","Modulo","ModuloView","Power","PowerView","ShiftLeft","ShiftLeftView","ShiftRight","ShiftRightView","Lt","LtView","Le","LeView","Gt","GtView","Ge","GeView","Eq","xnor","EqView","Ne","NeView","OpConst","leftOp","BigInt","genLabel","diameter","operSymbol","params","ArithConst","ShiftConst","BaseCompareConst","CompareConst","EqCompareConst","AdditionConst","AdditionConstView","SubtractionConst","SubtractionConstView","MultiplicationConst","MultiplicationConstView","DivisionConst","DivisionConstView","ModuloConst","ModuloConstView","PowerConst","PowerConstView","ShiftLeftConst","ShiftLeftConstView","ShiftRightConst","ShiftRightConstView","LtConst","LtConstView","LeConst","LeConstView","GtConst","GtConstView","GeConst","GeConstView","EqConst","EqConstView","NeConst","NeConstView","BitExtend","input","output","ex","_extBit","BitExtendView","querySelector","ZeroExtend","ZeroExtendView","SignExtend","SignExtendView","BusSlice","first","count","total","s","BusSliceView","BusRegroup","num","gbits","entries","lbl","group_dir","contra","BusRegroupView","BusGroup","outdata","BusGroupView","BusUngroup","BusUngroupView","Subcircuit","IOs","getCells","cell","outputs","sortfun","localeCompare","sort","iomap","io","_warnings","getPortsPositions","positions","res","SubcircuitView","zoomInCircuit","paper","GenMux","sel","ins","muxInputs","path","drawBorder","muxInput","GenMuxView","_updateMux","Mux","n","toString","MuxView","Mux1Hot","info","transform","toArray","indexOf","Mux1HotView","MuxSparse","default_input","deflt","idx","MuxSparseView","Dff","initial","aload","clock","clr","srst","arst","enable","last_clk","pol","what","srbits","srbitmask","apply_sr","clk","ain","clrbitmask","en","DffView","Memory","abits","rdports","wrports","words","portsplit","portsplits","portname","_memrdports","srst_polarity","arst_polarity","enable_polarity","clock_polarity","_memwrports","no_bit_enable","pop","removeProp","p","exec","portdata","init_value","memdata","Mem3vl","_memports","is_enabled","some","port_active","clkname","valid_addr","do_comb_read","addr","_calcaddr","write_value","oldval","mask","do_read","wrport","wrportname","mask_ok","transparent","collision","do_write","newval","eq","do_srst","srst_value","do_arst","arst_value","update_last_clk","toJSON","MemoryView","_displayEditor","div","title","append","ahex","ceil","columns","address","get_numbase","floor","c","clearMarkings","displayMarkings","updateStuff","row","addrs","col","repeat","redraw","ptrn","pattern","ds","table","closest","mem_change_cb","setTimeout","input_change_cb","off","FSM","init_state","states","trans_table","current_state","fsmgraph","statenodes","stateNo","isInit","resize","addTo","stateIn","trs","transitions","tr","trans","ctrlIn","ctrlOut","appendLabel","toBin","stateOut","state","pstate","removeAttr","pid","Map","state_in","state_out","ctrl_in","ctrl_out","next_trans","links","xmask","ixmask","results","xes","other","eqs","next_output","FSMView","pdiv","resetCells","dagre","graphlib","elem","fitToContent","padding","allowNewOrigin","highColor","lowColor","Display7","LEDs","a","points","e","f","g","dp","cx","cy","groupSelector","Display7View","_updateDisplay","inputSignal","newAttrs","specialGates","Set","Link","constructor","gateParams","special","isSubcircuit","helper","_links_to","create","_params","_presentationParamChanged","_monitors","_ports","worker","_markPresentationParam","addLinkTo","add","removeLinkTo","delete","addLink","linkId","removeLink","targets","getPorts","values","event","postMessage","monitor","monitorId","unmonitor","getMonitors","_gates","_links","_observed","_subcircuit","addGate","gateId","link","removeGate","getGate","getLink","getGates","observe","unobserve","observed","setSubcircuit","subcircuit","_interval","_graphs","_monitorChecks","_alarms","_alarmQueue","_queue","_pq","FastPriorityQueue","_toUpdate","_toUpdateParam","_tick","_sender","setInterval","_sendUpdates","_updater","interval","ms","updateGates","reqid","sendUpdates","_updateGates","_postMonitors","_sendAck","peek","_updateGatesNext","k","updateGatesNext","poll","q","newOutputs","_enqueue","_setGateOutputSignals","ping","start","_stop","startFast","startTime","Date","now","_hasPendingEvents","stop","clearInterval","addGraph","graphId","sourceGate","targetGate","_setGateInputSignal","addSubcircuit","subgraphId","IOmap","subgraph","ioId","_setGateOutputSignal","observeGraph","_markUpdate","unobserveGraph","changeInput","changeParam","paramName","manualMemChange","triggerValues","stopOnTrigger","oneShot","synchronous","alarm","tick","alarmId","stopOnAlarm","unalarm","q1","assign","triggered","triggerValue","oldOutput","monitors","oldInput","subcirPort","updates","pendingEvents","response","self","onmessage","msg","arg","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","m","__webpack_exports__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","key","splice","definition","o","defineProperty","enumerable","chunkId","Promise","all","reduce","promises","u","globalThis","Function","obj","hasOwnProperty","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","replace","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","then"],"sourceRoot":""}